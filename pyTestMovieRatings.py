#https://docs.mdblist.com/docs/score

import streamlit as st
import requests
import datetime
import pandas as pd

#STT
from streamlit_mic_recorder import speech_to_text


watchButtonAllowed = True

# Apply custom CSS to remove padding above the title
st.markdown("""
    <style>
        .block-container {
            padding-top: 1rem;
        }
    </style>
""", unsafe_allow_html=True)

##INIT
# Initialize session state variable for expander
if 'expander_open' not in st.session_state:
    st.session_state.expander_open = False

# Access the API key from Streamlit secrets
api_key = st.secrets["api_key"]
#mediatype = 'any' #movie / show / any
tmdb_api_key = st.secrets["tmdb_api_key"]

###STYLE
#BUTTON STYLE
#st.markdown("""
#    <style>
#    div.stButton > button {
#        font-size: 24px;
#        font-weight: bold;
#        /* height: 70px; */
#        height: 101px;
#    }
#    </style>
#""", unsafe_allow_html=True)

#TEXT INPUT STYLE
#st.markdown("""
#    <style>
#    div.stTextInput > div > input {
#        height: 70px;
#    }
#    /* Also adjust the container div to prevent cropping */
#    div.stTextInput > div {
#        height: 70px;
#    }
#    </style>
#""", unsafe_allow_html=True)

###LOGOS
#IMDB
imdb_star = '''
<div class="hello" class="sc-f056af46-4 jxjtIa">
  <svg width="40px" height="40px" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
       class="ipc-icon ipc-icon--star sc-40b53d-4 ejeafU"
       viewBox="0 0 24 24" fill="#FFD700" role="presentation">
    <path d="M12 17.27l4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72
             3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46
             c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24
             1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08l4.15-2.5z">
    </path>
  </svg>
</div>
'''
imdb_nostar = '''
<div class="sc-f056af46-4 jxjtIa">
  <svg width="40px" height="40px" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
       class="ipc-icon ipc-icon--star sc-40b53d-4 ejeafU"
       viewBox="0 0 24 24" fill="currentColor" role="presentation">
    <path d="M12 17.27l4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72
             3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46
             c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24
             1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08l4.15-2.5z">
    </path>
  </svg>
</div>
'''

#TOMATO critics
full_tomato = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" type="positive" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(1.33, 0)">
            <g transform="translate(0, 16.27)">
            <mask id="mask-2" fill="white">
                <polygon points="0.000109100102 0.246970954 77.0827837 0.246970954 77.0827837 63.7145228 0.000109100102 63.7145228"></polygon>
            </mask>
            <path d="M77.0137759,27.0426556 C76.2423237,14.6741909 69.9521992,5.42041494 60.4876349,0.246970954 C60.5414108,0.548381743 60.273195,0.925145228 59.9678008,0.791701245 C53.7772614,-1.91634855 43.2753527,6.84780083 35.9365975,2.25825726 C35.9917012,3.90539419 35.6700415,11.940249 24.3515353,12.4063071 C24.0843154,12.4172614 23.9372614,12.1443983 24.1062241,11.9512033 C25.619917,10.2247303 27.1482158,5.85360996 24.9507054,3.5233195 C20.2446473,7.74041494 17.5117012,9.32746888 8.48829876,7.23319502 C2.71103734,13.2740249 -0.562655602,21.5419087 0.08,31.8413278 C1.39120332,52.86639 21.0848133,64.8846473 40.9165145,63.6471369 C60.746888,62.4106224 78.3253112,48.0677178 77.0137759,27.0426556" fill="#FA320A" mask="url(#mask-2)"></path>
            </g>
            <path d="M40.8717012,11.4648963 C44.946722,10.49361 56.6678838,11.3702905 60.4232365,16.3518672 C60.6486307,16.6506224 60.3312863,17.2159336 59.9678008,17.0572614 C53.7772614,14.3492116 43.2753527,23.113361 35.9365975,18.5238174 C35.9917012,20.1709544 35.6700415,28.2058091 24.3515353,28.6718672 C24.0843154,28.6828216 23.9372614,28.4099585 24.1062241,28.2167635 C25.619917,26.4902905 27.1478838,22.1191701 24.9507054,19.7888797 C19.8243983,24.3827386 17.0453112,25.8589212 5.91900415,22.8514523 C5.55485477,22.753195 5.67900415,22.1679668 6.06639004,22.020249 C8.16929461,21.2165975 12.933444,17.6965975 17.4406639,16.1450622 C18.2987552,15.8499585 19.1541909,15.6209129 19.9890456,15.4878008 C15.02639,15.0443154 12.7893776,14.3541909 9.63286307,14.8302075 C9.28697095,14.8823237 9.05195021,14.479668 9.26639004,14.2034855 C13.5193361,8.7253112 21.3540249,7.07087137 26.1878838,9.98107884 C23.2082988,6.28912863 20.8743568,3.34473029 20.8743568,3.34473029 L26.4046473,0.203485477 C26.4046473,0.203485477 28.6894606,5.30821577 30.3518672,9.02340249 C34.4657261,2.94506224 42.119834,2.38406639 45.3536929,6.69676349 C45.5455602,6.95302905 45.3450622,7.31751037 45.0247303,7.30987552 C42.3926971,7.24580913 40.9434025,9.63983402 40.833527,11.4605809 L40.8717012,11.4648963" fill="#00912D"></path>
        </g>
    </svg>
</span>
'''
splat_tomato = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(0, 1.23)">
            <g>
            <mask id="mask-2" fill="white">
                <polygon points="0 0.161950465 79.7417075 0.161950465 79.7417075 77.522807 0 77.522807"></polygon>
            </mask>
            <path d="M71.4638596,70.225614 C56.3459649,71.0192982 53.2568421,53.7203509 47.325614,53.8435088 C44.7982456,53.8964912 42.8063158,56.5389474 43.6810526,59.6185965 C44.1621053,61.3115789 45.4964912,63.794386 46.337193,65.3350877 C49.302807,70.7719298 44.9185965,76.9245614 39.7880702,77.4449123 C31.2621053,78.3098246 27.705614,73.3638596 27.925614,68.3007018 C28.1729825,62.6168421 32.9922807,56.8091228 28.0494737,54.3378947 C22.8694737,51.7480702 18.6585965,61.8754386 13.7017544,64.1357895 C9.2154386,66.1817544 2.9877193,64.5954386 0.773684211,59.6136842 C-0.781403509,56.1129825 -0.498596491,49.3722807 6.42526316,46.8003509 C10.7501754,45.1940351 20.3880702,48.9010526 20.8824561,44.205614 C21.4522807,38.7929825 10.7575439,38.3364912 7.53754386,37.0385965 C1.84,34.7424561 -1.52280702,29.8291228 1.11192982,24.5582456 C3.08877193,20.6045614 8.90526316,18.9957895 13.3449123,20.7277193 C18.6635088,22.8024561 19.517193,28.3189474 22.2421053,30.6129825 C24.5894737,32.5901754 27.8021053,32.8375439 29.9031579,31.4782456 C31.4526316,30.4754386 31.9684211,28.2729825 31.3838596,26.2610526 C30.6084211,23.5901754 28.5505263,21.9235088 26.542807,20.2905263 C22.9698246,17.3859649 17.925614,14.8884211 20.9768421,6.96035088 C23.4778947,0.463157895 30.8133333,0.229122807 30.8133333,0.229122807 C33.7277193,-0.0985964912 36.3375439,0.781403509 38.4642105,2.68140351 C41.3073684,5.22140351 41.8610526,8.61649123 41.3852632,12.2385965 C40.9505263,15.5449123 39.7803509,18.4407018 39.1701754,21.7164912 C38.4621053,25.5196491 40.4947368,29.3519298 44.3603509,29.5010526 C49.4449123,29.6975439 50.9694737,25.7894737 51.5915789,23.3122807 C52.5024561,19.6877193 53.6978947,16.322807 57.0617544,14.2035088 C61.8894737,11.1617544 68.5954386,11.8284211 71.7066667,17.674386 C74.1677193,22.3 73.3775439,28.6677193 69.6024561,32.1449123 C67.9087719,33.7045614 65.8722807,34.254386 63.6694737,34.2698246 C60.5105263,34.2922807 57.3529825,34.2147368 54.4207018,35.6929825 C52.4245614,36.6989474 51.5547368,38.3382456 51.5550877,40.5354386 C51.5550877,42.6768421 52.6698246,44.0754386 54.4761404,44.985614 C57.8782456,46.7003509 61.6336842,47.0508772 65.3087719,47.694386 C70.6382456,48.6277193 75.3242105,50.5049123 78.3326316,55.4505263 C78.3596491,55.4940351 78.3859649,55.5378947 78.4115789,55.5821053 C81.8666667,61.4375439 78.2533333,69.8687719 71.4638596,70.225614" fill="#0AC855" mask="url(#mask-2)"></path>
            </g>
        </g>
    </svg>
</span>
'''
faded_tomato = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" type="empty" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(1.33, 0)">
            <g id="Group-3" transform="translate(0, 16.27)">
            <mask id="mask-2" fill="white">
                <polygon points="0.000109100102 0.246970954 77.0827837 0.246970954 77.0827837 63.7145228 0.000109100102 63.7145228"></polygon>
            </mask>
            <path d="M77.0137759,27.0426556 C76.2423237,14.6741909 69.9521992,5.42041494 60.4876349,0.246970954 C60.5414108,0.548381743 60.273195,0.925145228 59.9678008,0.791701245 C53.7772614,-1.91634855 43.2753527,6.84780083 35.9365975,2.25825726 C35.9917012,3.90539419 35.6700415,11.940249 24.3515353,12.4063071 C24.0843154,12.4172614 23.9372614,12.1443983 24.1062241,11.9512033 C25.619917,10.2247303 27.1482158,5.85360996 24.9507054,3.5233195 C20.2446473,7.74041494 17.5117012,9.32746888 8.48829876,7.23319502 C2.71103734,13.2740249 -0.562655602,21.5419087 0.08,31.8413278 C1.39120332,52.86639 21.0848133,64.8846473 40.9165145,63.6471369 C60.746888,62.4106224 78.3253112,48.0677178 77.0137759,27.0426556" fill="#DEDEDF" mask="url(#mask-2)"></path>
            </g>
            <path d="M40.8717012,11.4648963 C44.946722,10.49361 56.6678838,11.3702905 60.4232365,16.3518672 C60.6486307,16.6506224 60.3312863,17.2159336 59.9678008,17.0572614 C53.7772614,14.3492116 43.2753527,23.113361 35.9365975,18.5238174 C35.9917012,20.1709544 35.6700415,28.2058091 24.3515353,28.6718672 C24.0843154,28.6828216 23.9372614,28.4099585 24.1062241,28.2167635 C25.619917,26.4902905 27.1478838,22.1191701 24.9507054,19.7888797 C19.8243983,24.3827386 17.0453112,25.8589212 5.91900415,22.8514523 C5.55485477,22.753195 5.67900415,22.1679668 6.06639004,22.020249 C8.16929461,21.2165975 12.933444,17.6965975 17.4406639,16.1450622 C18.2987552,15.8499585 19.1541909,15.6209129 19.9890456,15.4878008 C15.02639,15.0443154 12.7893776,14.3541909 9.63286307,14.8302075 C9.28697095,14.8823237 9.05195021,14.479668 9.26639004,14.2034855 C13.5193361,8.7253112 21.3540249,7.07087137 26.1878838,9.98107884 C23.2082988,6.28912863 20.8743568,3.34473029 20.8743568,3.34473029 L26.4046473,0.203485477 C26.4046473,0.203485477 28.6894606,5.30821577 30.3518672,9.02340249 C34.4657261,2.94506224 42.119834,2.38406639 45.3536929,6.69676349 C45.5455602,6.95302905 45.3450622,7.31751037 45.0247303,7.30987552 C42.3926971,7.24580913 40.9434025,9.63983402 40.833527,11.4605809 L40.8717012,11.4648963" fill="#BCBDBE"></path>
        </g>
    </svg>
</span>
'''
fresh_tomato = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" type="certified-text" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <!-- Generator: Sketch 59.1 (86144) - https://sketch.com -->
        <title>Icons/Tomatometer &amp; AS/certified_fresh</title>
        <desc>Created with Sketch.</desc>
        <defs>
            <polygon id="path-1" points="0.0156351792 0.00599348534 75.8047696 0.00599348534 75.8047696 15.619544 0.0156351792 15.619544"></polygon>
        </defs>
        <g id="Icons/Tomatometer-&amp;-AS/certified_fresh" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
            <g id="Group-4">
                <rect id="Rectangle" fill="#000000" opacity="0" x="0" y="0" width="80" height="80"></rect>
                <g id="RT_CertifiedFreshSeal_wTEXT_RGB" transform="translate(2.084691, 0.000000)">
                    <g id="Group-3" transform="translate(0.000000, 64.364821)">
                        <mask id="mask-2" fill="white">
                            <use xlink:href="#path-1"></use>
                        </mask>
                        <g id="Clip-2"></g>
                        <path d="M75.705798,5.352443 C73.2779153,3.00325733 70.3517915,1.1676873 67.0944625,0.00599348534 C65.9692508,3.17863192 64.8669707,6.3562215 63.7878827,9.53824104 C63.7670358,9.59895765 63.6818241,9.63465798 63.5934853,9.61928339 C63.5794137,9.61667752 60.9052769,9.14892508 58.9451466,8.88156352 C58.8742671,9.66254072 58.784886,10.5550489 58.784886,10.5550489 C62.9149186,10.8164169 66.446645,12.8211075 68.5269055,15.5830619 C68.5915309,15.6557655 68.6926384,15.6518567 68.723127,15.574202 C69.4342671,12.7046254 69.6297068,9.64273616 69.2708795,6.55843648 C69.2734853,6.52560261 69.298241,6.50188925 69.3399349,6.49302932 C71.2815635,5.88273616 73.4290554,5.54892508 75.7138762,5.58306189 C75.8379153,5.59609121 75.8347883,5.47648208 75.705798,5.352443 M17.0199349,10.5550489 C12.8899023,10.8164169 9.3581759,12.8211075 7.27791531,15.5830619 C7.2132899,15.6557655 7.11192182,15.6518567 7.08143322,15.574202 C6.37029316,12.7046254 6.17511401,9.64273616 6.53394137,6.55843648 C6.5313355,6.52560261 6.5065798,6.50188925 6.46488599,6.49302932 C4.52299674,5.88273616 2.37576547,5.54892508 0.0909446254,5.58306189 C-0.0330944625,5.59609121 -0.0299674267,5.47648208 0.0990228013,5.352443 C2.52612378,3.00403909 5.45198697,1.16846906 8.70801303,0.0067752443 C9.83322476,3.17889251 10.934202,6.35648208 12.0132899,9.53824104 C12.0338762,9.59895765 12.1193485,9.63465798 12.2076873,9.61928339 C12.2222801,9.61667752 14.8674919,9.15309446 16.8596743,8.88104235 C16.9396743,9.7180456 17.0199349,10.5550489 17.0199349,10.5550489" id="Fill-1" fill="#3DAD55" mask="url(#mask-2)"></path>
                    </g>
                    <path d="M18.0307492,15.5460586 C18.1615635,16.3364169 18.0781759,16.8351792 17.5444951,17.379544 C17.1932248,17.7381107 16.7786319,17.9129642 16.2874267,17.9041042 C15.7959609,17.8957655 15.3500977,17.6885993 14.9573941,17.3034528 C14.5714658,16.925342 14.362215,16.490684 14.3437134,16 C14.3252117,15.5085342 14.4779153,15.0908143 14.8221498,14.7390228 C15.3086645,14.2428664 15.7104886,14.1771987 16.3932248,14.2115961 L16.3567427,12.6220195 C15.3047557,12.5506189 14.3874919,12.9078827 13.6242345,13.6867752 C12.9284691,14.3966124 12.5957003,15.2190228 12.605342,16.1607818 C12.6214984,17.0955049 12.9777199,17.9035831 13.687557,18.5993485 C14.3976547,19.2948534 15.2200651,19.6552443 16.1482736,19.6594545 C17.0762215,19.6638436 17.8848208,19.3073616 18.5803257,18.5975244 C19.4381759,17.722215 19.7829316,16.7223453 19.6148534,15.6117264 L18.0307492,15.5460586" id="Fill-4" fill="#0A0B09"></path>
                    <polyline id="Fill-5" fill="#0A0B09" points="21.9059283 13.7641694 21.2880782 12.7851466 23.8751792 11.1523127 23.082215 9.89550489 20.4948534 11.5278176 19.9437134 10.6548534 22.6697068 8.93446254 21.8457329 7.62892508 17.5364169 10.3481433 21.1468404 16.069316 25.4561564 13.3498371 24.6319218 12.0440391 21.9059283 13.7641694"></polyline>
                    <path d="M27.6763518,8.60820847 L26.8909446,8.87765472 L26.3749837,7.37094463 L27.1603909,7.10175896 C27.9270358,6.83882736 28.3309446,6.94540717 28.5063192,7.45667752 C28.6845603,7.9770684 28.4067752,8.3580456 27.6763518,8.60820847 Z M30.1740717,6.90553746 C29.6859935,5.48091205 28.4310098,5.03400651 26.7601303,5.60651466 L24.2126384,6.47921824 L26.4057329,12.8802606 L28.0677524,12.3103583 L27.3886645,10.3293811 L28.0461238,10.1037134 L29.9028013,11.6815635 L31.8110749,11.0274919 L29.6685342,9.2114658 C30.3163518,8.57120521 30.4839088,7.8095114 30.1740717,6.90553746 L30.1740717,6.90553746 Z" id="Fill-6" fill="#0A0B09"></path>
                    <polyline id="Fill-7" fill="#0A0B09" points="36.4114658 3.68677524 31.017329 4.33745928 31.2023453 5.87022801 33.0225407 5.65055375 33.6476873 10.8338762 35.4011726 10.6225407 34.7760261 5.43895765 36.5962215 5.21954397 36.4114658 3.68677524"></polyline>
                    <polyline id="Fill-8" fill="#0A0B09" points="38.5920521 10.5331596 40.3460586 10.6287948 40.7153094 3.87335505 38.9613029 3.77745928 38.5920521 10.5331596"></polyline>
                    <polyline id="Fill-9" fill="#0A0B09" points="47.9765472 6.81381107 48.3392834 5.31283388 43.7042345 4.19335505 42.1154397 10.7702932 43.8230619 11.1825407 44.4078176 8.7619544 47.1194788 9.41732899 47.4684039 7.97211726 44.7570033 7.31726384 45.0493811 6.10684039 47.9765472 6.81381107"></polyline>
                    <polyline id="Fill-10" fill="#0A0B09" points="50.7361564 6.26918567 48.025798 12.4682736 49.6351792 13.1718567 52.345798 6.97276873 50.7361564 6.26918567"></polyline>
                    <polyline id="Fill-11" fill="#0A0B09" points="53.5934853 13.6325733 54.2454723 12.6751792 56.7744625 14.3971336 57.6109446 13.1679479 55.0819544 11.4465147 55.6630619 10.5923127 58.3278176 12.4065147 59.1971336 11.1301629 54.9844951 8.26241042 51.1765472 13.855114 55.3891857 16.7233876 56.2585016 15.4465147 53.5934853 13.6325733"></polyline>
                    <path d="M61.6307492,18.2759609 C60.7007166,19.1179153 59.7623453,19.0170684 58.8169381,17.9721173 L58.499544,17.6213681 L61.225798,15.153355 L61.5366775,15.4970684 C62.4885993,16.5490554 62.5180456,17.4728339 61.6307492,18.2759609 Z M63.9919218,16.9584365 C63.8712704,16.0914658 63.4780456,15.3407166 62.830228,14.6254072 L61.1916612,12.8148534 L56.1758958,17.35557 L57.8144625,19.1658632 C59.0386971,20.5180456 60.9128339,21.3084039 62.8161564,19.5851466 C63.7248208,18.7627362 64.1130945,17.8254072 63.9919218,16.9584365 L63.9919218,16.9584365 Z" id="Fill-12" fill="#0A0B09"></path>
                    <line x1="41.5309446" y1="22.4484691" x2="41.1658632" y2="22.4247557" id="Fill-13" fill="#DB382A"></line>
                    <path d="M68.7674267,65.3708143 C68.727557,65.3443036 68.6874267,65.3177929 68.6472964,65.291672 C68.72443,65.3415746 68.7676873,65.3704245 68.7676873,65.3704245 M67.3951792,64.534557 C67.295114,64.4791964 67.1950489,64.4246155 67.0944625,64.3708143 C67.1958306,64.4246155 67.2964169,64.4795863 67.3951792,64.534557" id="Fill-14" fill="#79C08D"></path>
                    <path d="M63.7878827,73.9030619 C64.8291857,70.8364821 66.0099023,67.4285342 67.0944625,64.3708143 C67.1950489,64.4067752 67.295114,64.4432573 67.3951792,64.4802606 C67.9421498,64.6845603 68.4297068,64.8917264 68.6472964,64.9863192 C68.6874267,65.0037785 68.727557,65.0214984 68.7674267,65.0392182 L63.7878827,73.9030619" id="Fill-15" fill="#0EA248"></path>
                    <path d="M7.03791531,65.0389577 L7.03791531,65.0389577 C7.03791531,65.0389577 7.04990228,65.0334853 7.07283388,65.0235831 C7.06136808,65.0285342 7.04938111,65.0337459 7.03791531,65.0389577" id="Fill-16" fill="#79C08D"></path>
                    <path d="M12.0083388,73.8887296 L7.03791531,65.0389577 C7.04938111,65.0337459 7.06136808,65.0285342 7.07283388,65.0235831 C7.23335505,64.9532248 7.92703583,64.6540717 8.70540717,64.3726384 C9.78684039,67.4220195 10.9667752,70.8224104 12.0059935,73.8814332 C12.0067752,73.8837785 12.007557,73.8863844 12.0083388,73.8887296" id="Fill-17" fill="#0EA248"></path>
                    <path d="M58.784886,74.9198697 L58.9451466,73.2463844 C58.8745277,74.0247557 58.7856678,74.9138762 58.784886,74.9198697 M63.6143322,73.9867101 C63.6072964,73.9861889 63.6005212,73.9851466 63.5934853,73.9841042 C63.5851466,73.9825407 62.6319218,73.8157655 61.4480782,73.6247557 C62.1766775,73.7409772 62.9031922,73.8624104 63.6143322,73.9867101" id="Fill-18" fill="#309E53"></path>
                    <path d="M58.784886,74.9198697 L58.784886,74.9198697 C58.7856678,74.9138762 58.8745277,74.0247557 58.9451466,73.2463844 C59.7680782,73.3636482 60.6095114,73.4908143 61.4480782,73.6247557 C62.6319218,73.8157655 63.5851466,73.9825407 63.5934853,73.9841042 C63.6005212,73.9851466 63.6072964,73.9861889 63.6143322,73.9867101 C63.6158958,73.9869707 63.6177199,73.9872313 63.619544,73.9877524 L58.784886,74.9198697" id="Fill-19" fill="#129346"></path>
                    <path d="M12.1876221,73.9867101 C12.8531596,73.870228 13.5325081,73.7563518 14.214202,73.6469055 C13.0923779,73.8290554 12.2160261,73.9825407 12.2076873,73.9841042 C12.2009121,73.9851466 12.1943974,73.9859283 12.1876221,73.9867101" id="Fill-20" fill="#309E53"></path>
                    <path d="M17.0199349,74.9198697 L12.1821498,73.9877524 C12.1839739,73.9872313 12.185798,73.9869707 12.1876221,73.9867101 C12.1943974,73.9859283 12.2009121,73.9851466 12.2076873,73.9841042 C12.2160261,73.9825407 13.0923779,73.8290554 14.214202,73.6469055 C15.1001954,73.5046254 15.9903583,73.3696417 16.8596743,73.2458632 C16.8797394,73.455114 16.8998046,73.6643648 16.9185668,73.8605863 C16.937329,74.0568078 16.9547883,74.24 16.9699023,74.396873 C16.9847557,74.5537459 16.9972638,74.6845603 17.0061238,74.7760261 C17.0149837,74.8677524 17.0199349,74.9198697 17.0199349,74.9198697" id="Fill-21" fill="#129346"></path>
                    <path d="M63.3170033,59.0499023 C62.9482736,58.9943974 62.579544,58.9414984 62.2105537,58.8883388 C65.7592182,54.685342 67.980456,49.4113355 68.1550489,43.3412378 C68.3291205,49.3996091 66.4932899,54.7213029 63.3170033,59.0499023" id="Fill-22" fill="#ADADAA"></path>
                    <path d="M12.0786971,59.1114007 C9.53198697,55.5046254 7.90514658,51.1632573 7.59400651,46.1766775 C7.53250814,45.1887948 7.51166124,44.2069055 7.53537459,43.2343974 C7.54631922,43.6922476 7.56534202,44.1514007 7.59400651,44.6118567 C7.9465798,50.2647557 9.98905537,55.0892508 13.147101,58.9534853 C12.7908795,59.0056026 12.4343974,59.0569381 12.0786971,59.1114007" id="Fill-23" fill="#ADADAA"></path>
                    <path d="M43.2320521,68.4367427 C43.4618893,68.5018893 43.7167427,68.5401954 43.9953094,68.5511401 C43.7422801,68.5112704 43.4876873,68.4732248 43.2320521,68.4367427" id="Fill-24" fill="#E3662A"></path>
                    <path d="M9.84912052,59.4704886 C9.2570684,58.7447557 8.68925081,57.9958306 8.15061889,57.2208469 C3.93771987,51.1583062 1.71074919,44.0364821 1.71074919,36.624886 C1.71074919,27.0684039 5.45928339,18.2353094 12.265798,11.7529642 C19.0102932,5.32977199 28.0948534,1.7923127 37.8465147,1.7923127 C47.5981759,1.7923127 56.6829967,5.32977199 63.4274919,11.7529642 C70.2337459,18.2353094 73.9822801,27.0684039 73.9822801,36.624886 C73.9822801,44.0078176 71.7712052,51.1069707 67.588013,57.1551792 C67.0402606,57.9473616 66.4609772,58.7119218 65.8574593,59.4530293 C66.4792182,59.5562215 67.1001954,59.6633225 67.7206515,59.7735505 C72.6842997,53.3771987 75.6442997,45.3482736 75.6442997,36.624886 C75.6442997,15.7500977 58.7215635,0.13029316 37.8465147,0.13029316 C16.9714658,0.13029316 0.048990228,15.7500977 0.048990228,36.624886 C0.048990228,45.356873 3.01472313,53.3930945 7.98697068,59.7925733 C8.60716612,59.6818241 9.22762215,59.574202 9.84912052,59.4704886" id="Fill-25" fill="#E3662A"></path>
                    <path d="M64.2337459,62.9756352 L64.1284691,62.9756352 L64.1284691,62.7778502 L64.2337459,62.7778502 C64.3387622,62.7778502 64.3929642,62.8096417 64.3929642,62.8734853 C64.3929642,62.940456 64.3387622,62.9756352 64.2337459,62.9756352" id="Fill-26" fill="#E3662A"></path>
                    <path d="M64.2337459,62.7778502 L64.1284691,62.7778502 L64.1284691,62.9756352 L64.2337459,62.9756352 C64.3387622,62.9756352 64.3929642,62.940456 64.3929642,62.8734853 C64.3929642,62.8096417 64.3387622,62.7778502 64.2337459,62.7778502" id="Fill-27" fill="#128843"></path>
                    <path d="M21.2727036,64.5420195 C20.7210423,64.5420195 20.2300977,64.9641694 20.2300977,65.5455375 C20.2300977,66.1203909 20.7210423,66.5378502 21.2727036,66.5378502 C21.8418241,66.5378502 22.3153094,66.1388925 22.3153094,65.5455375 C22.3153094,64.9547883 21.8332248,64.5420195 21.2727036,64.5420195" id="Fill-28" fill="#128843"></path>
                    <path d="M55.1890554,64.2624104 C54.7020195,64.2624104 54.3598697,64.5649511 54.2676221,64.9993485 L56.0706189,64.9993485 C56.0312704,64.5779805 55.7284691,64.2624104 55.1890554,64.2624104" id="Fill-29" fill="#128843"></path>
                    <path d="M64.3898371,63.3897068 L64.236873,63.1700326 L64.1284691,63.1700326 L64.1284691,63.3897068 L63.9119218,63.3897068 L63.9119218,62.5899674 L64.2717915,62.5899674 C64.4630619,62.5899674 64.612899,62.6824756 64.612899,62.8734853 C64.612899,62.997785 64.5586971,63.0840391 64.4471661,63.1348534 L64.6353094,63.3897068 L64.3898371,63.3897068 Z M64.2337459,62.3572638 C64.0583713,62.3572638 63.9085342,62.4211075 63.7876221,62.5485342 C63.6664495,62.6728339 63.6059935,62.8291857 63.6059935,63.0105537 C63.6059935,63.1921824 63.6664495,63.3451466 63.7876221,63.4694463 C63.9085342,63.5937459 64.0583713,63.6544625 64.2337459,63.6544625 C64.4122476,63.6544625 64.5618241,63.5937459 64.6829967,63.4694463 C64.8072964,63.3451466 64.8677524,63.1921824 64.8677524,63.0105537 C64.8677524,62.8291857 64.8072964,62.6728339 64.6829967,62.5485342 C64.5618241,62.4211075 64.4122476,62.3572638 64.2337459,62.3572638 L64.2337459,62.3572638 Z" id="Fill-30" fill="#128843"></path>
                    <path d="M29.7581759,59.68443 C30.0711401,59.6779153 30.2340065,60.5904886 31.0314007,60.5485342 C31.3897068,60.529772 31.5801954,60.0849511 31.3980456,59.7761564 L31.3938762,59.7691205 C31.2351792,59.5082736 30.9878827,59.4092508 30.7067101,59.36 C30.5128339,59.3261238 30.3147883,59.3076221 30.1352443,59.2171987 C30.0401303,59.1689902 29.9812378,59.0952443 29.9812378,58.9824104 C29.9812378,58.8661889 30.027101,58.7799349 30.1323779,58.7267752 C30.2871661,58.6488599 30.4536808,58.6530293 30.620456,58.6517264 C30.7366775,58.6509446 30.8440391,58.6220195 30.9334202,58.5396743 C31.1325081,58.3562215 31.174202,58.0203257 31.04443,57.7761564 C30.8802606,57.4678827 30.5263844,57.4327036 30.2717915,57.5932248 C30.0943322,57.7050163 30.0312704,57.8824756 29.9833225,58.0737459 C29.9504886,58.2042997 29.8699674,58.4104235 29.6018241,58.4002606 C29.397785,58.392443 29.290684,58.190228 29.3279479,57.9895765 C29.36,57.8168078 29.421759,57.6638436 29.4446906,57.4895114 C29.4699674,57.2985016 29.4407818,57.1192182 29.290684,56.9852769 C29.1783713,56.8852117 29.0407818,56.8388274 28.8870358,56.8560261 C28.8870358,56.8560261 28.5000651,56.8682736 28.3682085,57.2109446 C28.2071661,57.6291857 28.4732248,57.7610423 28.6618893,57.9142671 C28.7676873,58.0005212 28.8763518,58.0883388 28.9172638,58.229316 C28.948013,58.3353746 28.9209121,58.4515961 28.8390879,58.5044951 C28.7283388,58.5761564 28.5586971,58.563127 28.4349186,58.4588925 C28.2910749,58.3377199 28.2462541,58.0469055 27.9656026,57.9374593 C27.7313355,57.8459935 27.4246254,57.9309446 27.3201303,58.1394137 C27.1812378,58.4174593 27.3586971,58.6767427 27.6591531,58.7979153 C27.8290554,58.8661889 28.3932248,58.8904235 28.3632573,59.1757655 C28.3371987,59.4235831 27.8287948,59.2281433 27.6005212,59.3128339 C27.2351792,59.4483388 27.2203257,59.8040391 27.3024104,59.9887948 C27.4191531,60.2514658 27.7477524,60.335114 27.9843648,60.2272313 C28.2459935,60.1081433 28.468013,59.5736808 28.7413681,59.7104886 C29.0019544,59.8407818 28.7478827,60.1472313 28.7348534,60.4469055 C28.723127,60.7140065 28.9107492,60.975114 29.3605212,60.9292508 C29.6312704,60.9018893 29.8624104,60.5774593 29.7060586,60.2905537 C29.661759,60.2092508 29.5911401,60.0781759 29.5658632,59.9890554 C29.5197394,59.8267101 29.6247557,59.6870358 29.7581759,59.68443" id="Fill-31" fill="#128843"></path>
                    <path d="M37.5593485,64.674658 C37.2672313,64.674658 37.0209772,64.7778502 36.8474267,64.9730293 C36.694202,65.1455375 36.609772,65.3764169 36.609772,65.6239739 C36.609772,66.2472964 37.0876873,66.5735505 37.5593485,66.5735505 C37.8514658,66.5735505 38.0977199,66.4703583 38.2712704,66.2749186 C38.4244951,66.102671 38.5089251,65.8715309 38.5089251,65.6239739 C38.5089251,65.0006515 38.0312704,64.674658 37.5593485,64.674658" id="Fill-32" fill="#128843"></path>
                    <path d="M64.8518567,63.6320521 C64.6829967,63.8009121 64.4758306,63.8869055 64.2337459,63.8869055 C63.9914007,63.8869055 63.7876221,63.8009121 63.6185016,63.6320521 C63.4530293,63.4598046 63.3701629,63.2526384 63.3701629,63.0105537 C63.3701629,62.7650814 63.4530293,62.5579153 63.6185016,62.3859283 C63.7876221,62.2139414 63.9914007,62.1279479 64.2337459,62.1279479 C64.4758306,62.1279479 64.6829967,62.2139414 64.8518567,62.3859283 C65.0207166,62.5579153 65.1069707,62.7650814 65.1069707,63.0105537 C65.1069707,63.2526384 65.0207166,63.4598046 64.8518567,63.6320521 Z M62.6241042,68.0899023 C62.1576547,68.4745277 61.5444951,68.6704886 60.8028664,68.6704886 C59.8413029,68.6704886 59.0616287,68.4687948 58.3637785,68.0114658 L58.2319218,67.9184365 L59.1418893,66.4169381 C60.1868404,67.0869055 60.7267752,66.9865798 60.9326384,66.970684 C61.3847557,66.9357655 61.4337459,66.4357003 61.0598046,66.4445603 C60.7723779,66.4510749 60.2048208,66.510228 59.363127,66.1183062 C58.7744625,65.7579153 58.3906189,65.3383713 58.3906189,64.6459935 C58.3906189,64.0482085 58.6389577,63.5588274 59.1288599,63.1914007 C59.5997394,62.8383062 60.0500326,62.6428664 60.7215635,62.6118567 C61.5921824,62.5717264 62.2228013,62.7611726 63.0045603,63.1635179 L63.1692508,63.2729642 L62.3390228,64.6407818 C61.4295765,64.2764821 60.9581759,64.1771987 60.6282736,64.2402606 C60.2418241,64.3137459 60.2975896,64.6887296 60.582671,64.7267752 C60.8677524,64.7645603 61.3229967,64.6420847 62.1805863,64.9464495 C62.9250814,65.2437785 63.3672964,65.7276873 63.3672964,66.5527036 C63.3672964,67.1760261 63.1171336,67.6930293 62.6241042,68.0899023 Z M58.068013,66.1008469 L54.2676221,66.1008469 C54.3734202,66.5592182 54.8810423,66.8179805 55.3514007,66.8179805 C55.9041042,66.8179805 56.3108795,66.7484039 56.6029967,66.3635179 L57.9908795,67.669316 C57.2281433,68.4813029 56.2738762,68.6407818 55.375114,68.6407818 C54.4813029,68.6407818 53.740456,68.3702932 53.1523127,67.8410423 C52.56443,67.3120521 52.2704886,66.5829316 52.2704886,65.6656678 C52.2704886,64.7601303 52.5409772,64.0310098 53.0936808,63.4665798 C53.6463844,62.8901629 54.3637785,62.6079479 55.2338762,62.6079479 C56.1394137,62.6079479 56.8450814,62.8901629 57.3388925,63.4665798 C57.8327036,64.0427362 58.0797394,64.7364169 58.0797394,65.5598697 L58.068013,66.1008469 Z M49.4499023,68.5089251 C47.828013,68.9003257 46.0239739,68.1936156 45.6088599,66.4740065 C45.3159609,65.260456 45.7563518,64.2767427 46.590228,63.6336156 C46.6699674,63.5684691 46.769772,63.5054072 46.8367427,63.482215 C46.4198046,63.5179153 46.1678176,63.497329 45.9137459,63.5828013 C45.8858632,63.5921824 45.8605863,63.562215 45.8743974,63.5361564 C46.1461889,63.0212378 46.7700326,62.7700326 47.211987,62.940456 C46.9117915,62.6783062 46.6759609,62.4690554 46.6759609,62.4690554 L47.0874267,62.1287296 C47.0874267,62.1287296 47.3508795,62.5175244 47.5424104,62.8005212 C47.7941368,62.2376547 48.4187622,62.0797394 48.7491857,62.389316 C48.7687296,62.407557 48.7575244,62.4406515 48.7309446,62.4448208 C48.5123127,62.4779153 48.4317915,62.7046254 48.4492508,62.8568078 L48.6389577,62.8330945 C50.1917915,62.6342671 51.5278176,63.4076873 51.9012378,64.9553094 C52.3163518,66.6749186 51.0717915,68.1172638 49.4499023,68.5089251 Z M45.1570033,68.5276873 L45.024886,68.5334202 C44.7937459,68.5433225 44.4849511,68.5566124 44.1641694,68.5566124 C42.6423453,68.5566124 41.7693811,67.7928339 41.7693811,66.3145277 L41.7693811,64.7312052 L41.1768078,64.7312052 L41.1768078,62.7572638 L41.7693811,62.7572638 L41.7693811,61.1958306 L44.0398697,61.1958306 L44.0398697,62.7572638 L44.9355049,62.7572638 L44.9355049,64.7312052 L44.0398697,64.7312052 L44.0398697,66.1662541 C44.0398697,66.4448208 44.1589577,66.5639088 44.4375244,66.5639088 L45.1570033,66.5639088 L45.1570033,68.5276873 Z M40.7403257,68.4841694 L38.541759,68.4841694 L38.541759,67.8410423 L38.3989577,67.9940065 C38.0036482,68.4171987 37.5067101,68.6407818 36.9610423,68.6407818 C36.570684,68.6407818 36.1615635,68.5235179 35.7777199,68.3014984 C34.9211726,67.8063844 34.4104235,66.803127 34.4109442,65.618241 C34.4114658,64.4385668 34.9224756,63.4397394 35.7777199,62.9464495 C36.1615635,62.7249511 36.5683388,62.6079479 36.9545277,62.6079479 C37.501759,62.6079479 38.0010423,62.8372638 38.3984365,63.2711401 L38.541759,63.4277524 L38.541759,62.769772 L40.7403257,62.769772 L40.7403257,68.4841694 Z M34.0291857,68.4914658 L31.7237785,68.4914658 L31.7237785,65.3792834 C31.7237785,64.8904235 31.5147883,64.6426059 31.1022801,64.6426059 C30.6918567,64.6426059 30.6095114,64.9000651 30.582671,64.9847557 C30.5117915,65.2385668 30.4998046,65.3834528 30.4998046,65.6912052 L30.4998046,68.4914658 L28.2277524,68.4914658 L28.2277524,65.3792834 C28.2277524,64.8904235 28.015114,64.6426059 27.5953094,64.6426059 C27.356873,64.6426059 27.2010423,64.7585668 27.1400651,64.8578502 C27.0970684,64.9224756 27.0647557,65.0394788 27.04443,65.1215635 C27.0037785,65.356873 27.0037785,65.4410423 27.0037785,65.6912052 L27.0037785,68.4914658 L24.7953094,68.4914658 L24.7953094,62.7572638 L26.9816287,62.7572638 L26.9800651,63.2961564 C27.135114,62.9800651 27.726645,62.6079479 28.5563518,62.6079479 C29.2393485,62.6079479 29.7837134,62.8427362 30.1300326,63.2867752 L30.1912704,63.3654723 L30.2574593,63.290684 C30.6704886,62.8231922 31.1439739,62.6235831 31.8410423,62.6235831 C32.4990228,62.6235831 34.0291857,62.8727036 34.0291857,65.1783713 L34.0291857,68.4914658 Z M21.3141368,68.6407818 C19.6484691,68.6407818 18.1315961,67.6036482 18.1315961,65.6244951 C18.1315961,64.0471661 19.0647557,63.0681433 20.3207818,62.7356352 C21.0186319,62.5831922 21.436873,62.5589577 22.1957003,62.708013 C23.5025407,63.0108143 24.4135505,64.0005212 24.4135505,65.6244951 C24.4135505,67.6036482 22.9800651,68.6407818 21.3141368,68.6407818 Z M16.9355049,68.4914658 L14.7226059,68.4914658 L14.7226059,63.1403257 L12.7734202,63.1403257 L12.7734202,60.9639088 L18.8849511,60.9639088 L18.8849511,63.1403257 L16.9355049,63.1403257 L16.9355049,68.4914658 Z M68.4810423,59.9077524 C63.3970033,58.9790228 58.2655375,58.2889902 53.1114007,57.829316 C53.1411075,58.0299674 53.1580456,58.2433876 53.1580456,58.4719218 L53.1580456,61.7779805 L50.8714007,61.7779805 L50.8714007,58.6613681 C50.8714007,58.1811075 50.6639739,57.9374593 50.255114,57.9374593 C49.8264495,57.9374593 49.5609121,58.1180456 49.5609121,59.0175896 L49.5609121,61.7779805 L47.2716612,61.7779805 L47.2716612,57.4063844 C47.1421498,57.3993485 47.012899,57.3915309 46.8833876,57.3847557 C46.8859935,57.4413029 46.8899023,57.4968078 46.8899023,57.5543974 L46.8781759,58.0953746 L43.077785,58.0953746 C43.1835831,58.5540065 43.6912052,58.8127687 44.1615635,58.8127687 C44.7142671,58.8127687 45.1210423,58.7431922 45.4131596,58.3580456 L46.8010423,59.6641042 C46.0383062,60.4760912 45.0840391,60.63557 44.1852769,60.63557 C43.2914658,60.63557 42.5506189,60.3650814 41.9624756,59.8358306 C41.3745928,59.3065798 41.0806515,58.5777199 41.0806515,57.660456 C41.0806515,57.4944625 41.092899,57.3368078 41.1111401,57.1828013 C40.9610423,57.1799349 40.8112052,57.1770684 40.6611075,57.1744625 L40.6611075,58.022671 L39.7662541,58.022671 L39.7662541,59.4564169 C39.7662541,59.7349837 39.8850814,59.8538111 40.1636482,59.8538111 L40.8823453,59.8538111 L40.8823453,61.8157655 L40.750228,61.8214984 C40.5196091,61.8311401 40.2110749,61.84443 39.8902932,61.84443 C38.369772,61.84443 37.4978502,61.0816938 37.4978502,59.60443 L37.4978502,58.022671 L36.9055375,58.022671 L36.9055375,57.1541368 C36.7590879,57.1549186 36.6126384,57.1572638 36.4661889,57.1585668 L36.4661889,58.0185016 L35.5715961,58.0185016 L35.5715961,59.4522476 C35.5715961,59.7305537 35.6904235,59.8493811 35.9689902,59.8493811 L36.6874267,59.8493811 L36.6874267,61.8115961 L36.55557,61.8170684 C36.3246906,61.8269707 36.0161564,61.8402606 35.6956352,61.8402606 C34.175114,61.8402606 33.3029316,61.0772638 33.3029316,59.6002606 L33.3029316,58.0185016 L32.7108795,58.0185016 L32.7108795,57.2278827 C32.5013681,57.2341368 32.2918567,57.2429967 32.0823453,57.2500326 C32.3486645,57.6966775 32.5011075,58.2499023 32.5011075,58.9097068 C32.5011075,60.8880782 31.1262541,61.9246906 29.3573941,61.9246906 C27.5887948,61.9246906 26.1308143,60.8880782 26.1308143,58.9097068 C26.1308143,58.3864495 26.2353094,57.9304235 26.4185016,57.5405863 C26.2801303,57.5497068 26.141759,57.5588274 26.0033876,57.5684691 C25.8621498,58.2170684 25.5009772,58.7218241 24.922215,59.0717915 L24.8508143,59.1150489 L26.4375244,61.7779805 L23.8707492,61.7779805 L22.4416938,59.3355049 L22.0622801,59.3355049 L22.0622801,61.7779805 L19.7829316,61.7779805 L19.7829316,58.1123127 C15.6062541,58.556873 11.447557,59.1538762 7.32013029,59.9077524 C7.2114658,59.927557 7.14032573,59.9992182 7.16403909,60.0643648 C8.82918567,64.667101 10.4456026,69.28 12.0132899,73.9030619 C12.0338762,73.9637785 12.1193485,73.9994788 12.2076873,73.9841042 C29.1460586,71.0155049 46.655114,71.0155049 63.5934853,73.9841042 C63.6818241,73.9994788 63.7670358,73.9637785 63.7878827,73.9030619 C65.35557,69.28 66.971987,64.667101 68.6371336,60.0643648 C68.6608469,59.9992182 68.5894463,59.927557 68.4810423,59.9077524 L68.4810423,59.9077524 Z" id="Fill-33" fill="#128843"></path>
                    <path d="M42.6157655,18.1912704 C44.8229316,17.9937459 49.6492508,18.1055375 52.0046906,20.4166775 C52.1461889,20.5553094 52.0244951,20.8760912 51.821759,20.8213681 C48.3708143,19.8908143 42.9850163,24.4719218 39.4939414,21.5095765 C39.3970033,22.3760261 38.6157655,26.5573941 32.6556352,25.9377199 C32.514658,25.923127 32.4586319,25.7688599 32.5618241,25.6807818 C33.4858632,24.8925081 34.6191531,22.7210423 33.6469055,21.3336808 C30.612899,23.3472313 29.0457329,23.4340065 23.4512052,21.0108143 C23.268013,20.9315961 23.3777199,20.6347883 23.5919218,20.5868404 C24.7538762,20.3265147 27.5160912,19.3214332 29.9940065,18.8534202 C30.4654072,18.7642997 30.9305537,18.7095765 31.3777199,18.7038436 C28.8140717,18.0930293 27.6958958,17.5609121 26.0072964,17.5692508 C25.8222801,17.5702932 25.729772,17.3414984 25.8631922,17.2132899 C28.5073616,14.670228 33.299544,14.5414984 35.607557,16.4338762 L33.5398046,12.1138762 L36.0531596,11.7355049 C36.0531596,11.7355049 36.7087948,14.0390879 37.2956352,16.1104886 C39.912443,13.2427362 43.9619544,13.5330293 45.3256026,16.0372638 C45.406645,16.1860586 45.2737459,16.3616938 45.1067101,16.3330293 C43.7339414,16.0987622 42.792443,17.2414332 42.5962215,18.1863192 L42.6157655,18.1912704" id="Fill-34" fill="#128843"></path>
                    <path d="M43.9992182,56.2569381 C43.5121824,56.2569381 43.1700326,56.5594788 43.077785,56.9938762 L44.8807818,56.9938762 C44.8414332,56.5727687 44.5386319,56.2569381 43.9992182,56.2569381" id="Fill-35" fill="#DB382A"></path>
                    <path d="M23.7532248,56.7710749 C23.7532248,56.3064495 23.3441042,56.0059935 22.7108795,56.0059935 L22.0570684,56.0059935 L22.0570684,57.5916612 L22.7108795,57.5916612 C23.3732899,57.5916612 23.7532248,57.2925081 23.7532248,56.7710749" id="Fill-36" fill="#DB382A"></path>
                    <path d="M11.1293811,33.5176547 L20.3220847,33.5176547 L20.3220847,36.8013029 L14.8020847,36.8013029 L14.8020847,38.6306189 L19.9150489,38.6306189 L19.9150489,41.8082085 L14.8020847,41.8082085 L14.8020847,46.3726384 L11.1293811,46.3726384 L11.1293811,33.5176547 Z M20.9613029,33.5176547 L26.1237785,33.5176547 C29.539544,33.5176547 31.4986319,35.1609121 31.4986319,38.0255375 C31.4986319,39.7672964 30.7739414,41.0407818 29.3435831,41.8147231 L32.0599349,46.3726384 L27.8350489,46.3726384 L25.5528339,42.5334202 L24.6342671,42.5334202 L24.6342671,46.3726384 L20.9613029,46.3726384 L20.9613029,33.5176547 Z M32.362215,33.5176547 L42.1563518,33.5176547 L42.1563518,36.8013029 L36.2472964,36.8013029 L36.2472964,38.2415635 L41.8553746,38.2415635 L41.8553746,41.4188925 L36.2472964,41.4188925 L36.2472964,43.0889902 L42.1563518,43.0889902 L42.1563518,46.3726384 L32.362215,46.3726384 L32.362215,33.5176547 Z M44.7525733,41.3620847 L44.9104886,41.5674267 C45.806645,42.7340717 46.8820847,43.3013681 48.1985668,43.3013681 C49.0191531,43.3013681 49.5291205,43.0220195 49.5291205,42.5725081 C49.5291205,42.4354397 49.5291205,42.0190228 48.4789577,41.8402606 L46.5667752,41.4861238 C45.4824756,41.3021498 44.567557,40.8531596 43.847557,40.1516612 C43.1317264,39.4168078 42.7708143,38.5185668 42.7708143,37.4770033 C42.7708143,36.2426059 43.2706189,35.2299674 44.2561564,34.4672313 C45.237785,33.7081433 46.4213681,33.3232573 47.7740717,33.3232573 C49.767557,33.3232573 51.4327036,34.0878176 52.7228664,35.5960912 L52.8544625,35.7500977 L50.5060586,38.2616287 L50.3418893,38.0641042 C49.5176547,37.0715309 48.6314007,36.5889251 47.6325733,36.5889251 C46.7559609,36.5889251 46.4435179,36.9289902 46.4435179,37.2471661 C46.4435179,37.3636482 46.4435179,37.7180456 47.3521824,37.8730945 L49.051987,38.1740717 C51.805342,38.6545928 53.2018241,40.0927687 53.2018241,42.4484691 C53.2018241,43.6729642 52.6829967,44.6803909 51.6599349,45.443127 C50.6452117,46.1993485 49.4261889,46.5670358 47.9332899,46.5670358 C45.6818241,46.5670358 43.654202,45.5645603 42.5091857,43.885342 L42.4041694,43.7308143 L44.7525733,41.3620847 Z M53.6549837,33.5176547 L57.3276873,33.5176547 L57.3276873,38.1529642 L60.8732248,38.1529642 L60.8732248,33.5176547 L64.5636482,33.5176547 L64.5636482,46.3726384 L60.8732248,46.3726384 L60.8732248,41.6310098 L57.3276873,41.6310098 L57.3276873,46.3726384 L53.6549837,46.3726384 L53.6549837,33.5176547 Z M19.7829316,58.1154397 L19.7829316,54.2504235 L22.9151792,54.2504235 C24.9214332,54.2504235 26.0719218,55.2187622 26.0719218,56.907101 C26.0719218,57.1408469 26.0482085,57.3597394 26.0039088,57.5648208 C26.1425407,57.5551792 26.2811726,57.547101 26.4200651,57.5377199 C26.7890554,56.7549186 27.4811726,56.2441694 28.3186971,56.0221498 C29.0162866,55.8697068 29.5259935,55.8457329 30.2842997,55.9945277 C31.0587622,56.1740717 31.691987,56.5967427 32.0810423,57.2479479 C32.2908143,57.2406515 32.5008469,57.2357003 32.7108795,57.2294463 L32.7108795,56.0461238 L33.3029316,56.0461238 L33.3029316,54.4862541 L35.5715961,54.4862541 L35.5715961,56.0461238 L36.4661889,56.0461238 L36.4661889,57.1562215 C36.6126384,57.1549186 36.7590879,57.1554397 36.9055375,57.1543974 L36.9055375,56.0502932 L37.4978502,56.0502932 L37.4978502,54.4904235 L39.7662541,54.4904235 L39.7662541,56.0502932 L40.6611075,56.0502932 L40.6611075,57.1736808 C40.8112052,57.1760261 40.9610423,57.1796743 41.1111401,57.1825407 C41.1921824,56.495114 41.4522476,55.9223453 41.9038436,55.4611075 C42.4565472,54.8849511 43.1739414,54.6027362 44.0440391,54.6027362 C44.9495765,54.6027362 45.6552443,54.8849511 46.1490554,55.4611075 C46.6092508,55.9979153 46.8521173,56.6381759 46.8836482,57.3886645 C47.012899,57.3954397 47.1424104,57.4027362 47.2716612,57.409772 L47.2716612,56.0565472 L49.538241,56.0565472 L49.538241,56.7194788 C49.690684,56.3731596 50.3603909,55.8947231 51.0225407,55.8947231 C52.1907492,55.8947231 52.9287296,56.5923127 53.1116612,57.8311401 C56.1547883,58.1029316 59.1898371,58.4536808 62.2118567,58.8885993 C66.2407818,54.1172638 68.5586971,47.9661238 68.1138762,40.8370033 C67.4183713,29.6901629 60.9224756,22.9800651 51.5512704,20.0216287 C51.7104886,20.1456678 51.8624104,20.2770033 52.0046906,20.4166775 C52.1461889,20.5550489 52.0244951,20.8758306 51.821759,20.8213681 C48.3708143,19.8908143 42.9850163,24.4719218 39.4939414,21.5095765 C39.3970033,22.3760261 38.6157655,26.5573941 32.6556352,25.9377199 C32.514658,25.923127 32.4586319,25.7688599 32.5618241,25.6807818 C33.4858632,24.8925081 34.6191531,22.7210423 33.6469055,21.3336808 C30.612899,23.3472313 29.0457329,23.4340065 23.4512052,21.0108143 C23.393355,20.9855375 23.367557,20.9381107 23.3620847,20.88443 C10.2981107,25.5327687 6.98136808,34.789316 7.59400651,44.6118567 C7.9465798,50.2647557 9.98905537,55.0892508 13.147101,58.9534853 C15.3527036,58.6303583 17.565342,58.3523127 19.7829316,58.1154397 L19.7829316,58.1154397 Z" id="Fill-37" fill="#DB382A"></path>
                    <path d="M27.8259283,37.9900977 C27.8259283,37.0035179 27.0676221,36.8013029 25.9293811,36.8013029 L24.6342671,36.8013029 L24.6342671,39.2674919 L25.9293811,39.2674919 C27.6291857,39.2674919 27.8259283,38.5386319 27.8259283,37.9900977" id="Fill-38" fill="#DB382A"></path>
                    <polyline id="Fill-39" fill="#FAD41F" points="27.2052117 56.5615635 27.1775896 56.5837134 27.2052117 56.5615635"></polyline>
                    <polyline id="Fill-40" fill="#FAD41F" points="26.9573941 56.7778502 26.9714658 56.7645603 26.9573941 56.7778502"></polyline>
                    <polyline id="Fill-41" fill="#FAD41F" points="26.5735505 57.2562866 26.5725081 57.2583713 26.5735505 57.2562866"></polyline>
                    <path d="M26.0039088,57.5648208 L26.0036482,57.5661238 C26.1422801,57.5562215 26.2809121,57.5478827 26.419544,57.5387622 L26.4200651,57.5377199 C26.2811726,57.547101 26.1425407,57.5551792 26.0039088,57.5648208" id="Fill-42" fill="#FAD41F"></path>
                    <path d="M26.0719218,56.907101 C26.0719218,57.0241042 26.0656678,57.1371987 26.0544625,57.2471661 C26.0659283,57.1374593 26.0719218,57.0241042 26.0719218,56.907101" id="Fill-43" fill="#FAD41F"></path>
                    <path d="M51.6805212,55.9814984 C51.6406515,55.9702932 51.6,55.9606515 51.5585668,55.9515309 C51.6,55.9606515 51.6406515,55.9702932 51.6805212,55.9814984" id="Fill-44" fill="#FAD41F"></path>
                    <path d="M51.254202,55.904886 C51.1788925,55.8983713 51.1020195,55.8947231 51.0225407,55.8947231 C51.1020195,55.8947231 51.1788925,55.8983713 51.254202,55.904886" id="Fill-45" fill="#FAD41F"></path>
                    <path d="M51.8741368,56.0471661 C51.8389577,56.0330945 51.8035179,56.0200651 51.7670358,56.0080782 C51.8035179,56.0200651 51.8389577,56.0330945 51.8741368,56.0471661" id="Fill-46" fill="#FAD41F"></path>
                    <path d="M51.473355,55.9340717 C51.4264495,55.9254723 51.3779805,55.9194788 51.3289902,55.9137459 C51.3779805,55.9194788 51.4264495,55.9254723 51.473355,55.9340717" id="Fill-47" fill="#FAD41F"></path>
                    <path d="M36.4661889,57.1570033 C36.4917264,57.1567427 36.5170033,57.1562215 36.5422801,57.1559609 C36.5170033,57.1562215 36.4917264,57.1559609 36.4661889,57.1562215 L36.4661889,57.1570033" id="Fill-48" fill="#FAD41F"></path>
                    <path d="M52.054202,56.1300326 C52.0231922,56.1136156 51.9921824,56.0974593 51.9598697,56.0826059 C51.9921824,56.0974593 52.0231922,56.1136156 52.054202,56.1300326" id="Fill-49" fill="#FAD41F"></path>
                    <path d="M30.6220195,56.0935505 C30.597785,56.0852117 30.5740717,56.0758306 30.549316,56.068013 C30.5740717,56.0758306 30.597785,56.0852117 30.6220195,56.0935505" id="Fill-50" fill="#FAD41F"></path>
                    <path d="M32.0807818,57.2476873 L32.0818241,57.2489902 C32.1282085,57.2476873 32.1745928,57.245342 32.2209772,57.2437785 C32.1743322,57.2450814 32.1276873,57.2463844 32.0810423,57.2479479 L32.0807818,57.2476873" id="Fill-51" fill="#FAD41F"></path>
                    <path d="M40.6611075,57.174202 C40.6921173,57.1747231 40.7233876,57.1749837 40.7543974,57.1755049 C40.7233876,57.1749837 40.6921173,57.174202 40.6611075,57.1736808 L40.6611075,57.174202" id="Fill-52" fill="#FAD41F"></path>
                    <polyline id="Fill-53" fill="#FAD41F" points="31.3331596 56.4489902 31.310228 56.4338762 31.3331596 56.4489902"></polyline>
                    <path d="M30.8792182,56.1951792 C30.8549837,56.1842345 30.8310098,56.1732899 30.8062541,56.1628664 C30.8310098,56.1732899 30.8549837,56.1842345 30.8792182,56.1951792" id="Fill-54" fill="#FAD41F"></path>
                    <path d="M28.0411726,56.1097068 C28.0161564,56.1185668 27.9919218,56.1284691 27.9671661,56.1378502 C27.9919218,56.1284691 28.0161564,56.1185668 28.0411726,56.1097068" id="Fill-55" fill="#FAD41F"></path>
                    <polyline id="Fill-56" fill="#FAD41F" points="27.7613029 56.2251466 27.6990228 56.2545928 27.7613029 56.2251466"></polyline>
                    <polyline id="Fill-57" fill="#FAD41F" points="31.1145277 56.3129642 31.0571987 56.2819544 31.1145277 56.3129642"></polyline>
                    <path d="M41.9038436,55.4611075 C41.8407818,55.5254723 41.782671,55.592443 41.7271661,55.6607166 C41.782671,55.592443 41.8407818,55.5254723 41.9038436,55.4611075" id="Fill-58" fill="#FAD41F"></path>
                    <polyline id="Fill-59" fill="#FAD41F" points="46.8620195 57.1158306 46.8612378 57.108013 46.8620195 57.1158306"></polyline>
                    <polyline id="Fill-60" fill="#FAD41F" points="41.3764169 56.2214984 41.3498371 56.2829967 41.3764169 56.2214984"></polyline>
                    <path d="M41.5059283,55.9791531 C41.4856026,56.0132899 41.4663192,56.0482085 41.4472964,56.083127 C41.4663192,56.0482085 41.4856026,56.0132899 41.5059283,55.9791531" id="Fill-61" fill="#FAD41F"></path>
                    <polyline id="Fill-62" fill="#FAD41F" points="46.7614332 56.602215 46.750228 56.5649511 46.7614332 56.602215"></polyline>
                    <polyline id="Fill-63" fill="#FAD41F" points="46.8213681 56.8544625 46.8171987 56.8336156 46.8213681 56.8544625"></polyline>
                    <path d="M41.6664495,55.7409772 C41.6349186,55.7831922 41.6039088,55.8259283 41.5747231,55.8694463 C41.6039088,55.8259283 41.6349186,55.7831922 41.6664495,55.7409772" id="Fill-64" fill="#FAD41F"></path>
                    <path d="M61.225798,15.153355 L58.499544,17.6213681 L58.8169381,17.9721173 C59.7623453,19.0170684 60.7007166,19.1179153 61.6307492,18.2759609 C62.5180456,17.4728339 62.4885993,16.5490554 61.5366775,15.4970684 L61.225798,15.153355" id="Fill-65" fill="#FAD41F"></path>
                    <path d="M27.1603909,7.10175896 L26.3749837,7.37094463 L26.8909446,8.87765472 L27.6763518,8.60820847 C28.4067752,8.3580456 28.6845603,7.9770684 28.5063192,7.45667752 C28.3309446,6.94540717 27.9270358,6.83882736 27.1603909,7.10175896" id="Fill-66" fill="#FAD41F"></path>
                    <path d="M62.8161564,19.5851466 C60.9128339,21.3084039 59.0386971,20.5180456 57.8144625,19.1658632 L56.1758958,17.35557 L61.1916612,12.8148534 L62.830228,14.6254072 C63.4780456,15.3407166 63.8712704,16.0914658 63.9919218,16.9584365 C64.1130945,17.8254072 63.7248208,18.7627362 62.8161564,19.5851466 Z M51.1765472,13.855114 L54.9844951,8.26241042 L59.1971336,11.1301629 L58.3278176,12.4065147 L55.6630619,10.5923127 L55.0819544,11.4465147 L57.6109446,13.1679479 L56.7744625,14.3971336 L54.2454723,12.6751792 L53.5934853,13.6325733 L56.2585016,15.4465147 L55.3891857,16.7233876 L51.1765472,13.855114 Z M48.025798,12.4682736 L50.7361564,6.26918567 L52.345798,6.97276873 L49.6351792,13.1718567 L48.025798,12.4682736 Z M47.4684039,7.97211726 L47.1194788,9.41732899 L44.4078176,8.7619544 L43.8230619,11.1825407 L42.1154397,10.7702932 L43.7042345,4.19335505 L48.3392834,5.31283388 L47.9765472,6.81381107 L45.0493811,6.10684039 L44.7570033,7.31726384 L47.4684039,7.97211726 Z M40.3460586,10.6287948 L38.5920521,10.5331596 L38.9613029,3.77745928 L40.7153094,3.87335505 L40.3460586,10.6287948 Z M34.7760261,5.43895765 L35.4011726,10.6225407 L33.6476873,10.8338762 L33.0225407,5.65055375 L31.2023453,5.87022801 L31.017329,4.33745928 L36.4114658,3.68677524 L36.5962215,5.21954397 L34.7760261,5.43895765 Z M29.9028013,11.6815635 L28.0461238,10.1037134 L27.3886645,10.3293811 L28.0677524,12.3103583 L26.4057329,12.8802606 L24.2126384,6.47921824 L26.7601303,5.60651466 C28.4310098,5.03400651 29.6859935,5.48091205 30.1740717,6.90553746 C30.4839088,7.8095114 30.3163518,8.57120521 29.6685342,9.2114658 L31.8110749,11.0274919 L29.9028013,11.6815635 Z M21.1468404,16.069316 L17.5364169,10.3481433 L21.8457329,7.62892508 L22.6697068,8.93446254 L19.9437134,10.6548534 L20.4948534,11.5278176 L23.082215,9.89550489 L23.8751792,11.1523127 L21.2880782,12.7851466 L21.9059283,13.7641694 L24.6319218,12.0440391 L25.4561564,13.3498371 L21.1468404,16.069316 Z M18.5803257,18.5975244 C17.8848208,19.3073616 17.0762215,19.6638436 16.1482736,19.6594545 C15.2200651,19.6552443 14.3976547,19.2948534 13.687557,18.5993485 C12.9777199,17.9035831 12.6214984,17.0955049 12.605342,16.1607818 C12.5957003,15.2190228 12.9284691,14.3966124 13.6242345,13.6867752 C14.3874919,12.9078827 15.3047557,12.5506189 16.3567427,12.6220195 L16.3932248,14.2115961 C15.7104886,14.1771987 15.3086645,14.2428664 14.8221498,14.7390228 C14.4779153,15.0908143 14.3252117,15.5085342 14.3437134,16 C14.362215,16.490684 14.5714658,16.925342 14.9573941,17.3034528 C15.3500977,17.6885993 15.7959609,17.8957655 16.2874267,17.9041042 C16.7786319,17.9129642 17.1932248,17.7381107 17.5444951,17.379544 C18.0781759,16.8351792 18.1615635,16.3364169 18.0307492,15.5460586 L19.6148534,15.6117264 C19.7829316,16.7223453 19.4381759,17.722215 18.5803257,18.5975244 Z M63.4274919,11.7529642 C56.6829967,5.32977199 47.5981759,1.7923127 37.8465147,1.7923127 C28.0948534,1.7923127 19.0102932,5.32977199 12.265798,11.7529642 C5.45928339,18.2353094 1.71074919,27.0684039 1.71074919,36.624886 C1.71074919,44.0364821 3.93771987,51.1583062 8.15061889,57.2208469 C8.68820847,57.9945277 9.25498371,58.7418893 9.84547231,59.4665798 C10.9438436,59.2833876 12.0448208,59.1145277 13.1468404,58.9529642 C9.98905537,55.0889902 7.9465798,50.2647557 7.59400651,44.6118567 C6.98136808,34.789316 10.2981107,25.5327687 23.3620847,20.88443 C23.3506189,20.7679479 23.4452117,20.6196743 23.5919218,20.5868404 C24.7538762,20.3265147 27.5160912,19.3214332 29.9940065,18.8534202 C30.4654072,18.7642997 30.9305537,18.7095765 31.3777199,18.7038436 C28.8140717,18.0930293 27.6958958,17.5609121 26.0072964,17.5692508 C25.8222801,17.5702932 25.729772,17.3414984 25.8631922,17.2132899 C28.5073616,14.670228 33.299544,14.5414984 35.607557,16.4338762 L33.5398046,12.1138762 L36.0531596,11.7355049 C36.0531596,11.7355049 36.7087948,14.0390879 37.2956352,16.1104886 C39.9127036,13.2427362 43.9619544,13.5332899 45.3256026,16.0372638 C45.406645,16.1860586 45.2737459,16.3616938 45.1067101,16.3330293 C43.7339414,16.0987622 42.792443,17.2414332 42.5962215,18.1863192 L42.6157655,18.1912704 C44.6895114,18.0057329 49.074658,18.0935505 51.5512704,20.0216287 C60.9224756,22.9800651 67.4183713,29.6901629 68.1138762,40.8370033 C68.5586971,47.9661238 66.2407818,54.1172638 62.2118567,58.8885993 C62.1738111,58.883127 62.1355049,58.8784365 62.0974593,58.8729642 C63.3532248,59.0527687 64.6074267,59.2437785 65.8585016,59.451987 C66.461759,58.7111401 67.0405212,57.9468404 67.588013,57.1551792 C71.7712052,51.1069707 73.9822801,44.0078176 73.9822801,36.624886 C73.9822801,27.0684039 70.2337459,18.2353094 63.4274919,11.7529642 L63.4274919,11.7529642 Z" id="Fill-67" fill="#F9D320"></path>
                    <path d="M46.3158306,55.6737459 C46.2637134,55.6013029 46.2084691,55.5301629 46.1490554,55.4611075 C46.2084691,55.5301629 46.2637134,55.6013029 46.3158306,55.6737459" id="Fill-68" fill="#FAD41F"></path>
                    <polyline id="Fill-69" fill="#FAD41F" points="52.6902932 56.6926384 52.6535505 56.6426059 52.6902932 56.6926384"></polyline>
                    <polyline id="Fill-70" fill="#FAD41F" points="52.570684 56.5386319 52.5279479 56.4925081 52.570684 56.5386319"></polyline>
                    <polyline id="Fill-71" fill="#FAD41F" points="52.7945277 56.8583713 52.766645 56.8104235 52.7945277 56.8583713"></polyline>
                    <polyline id="Fill-72" fill="#FAD41F" points="52.4052117 56.3721173 52.4372638 56.3992182 52.4052117 56.3721173"></polyline>
                    <polyline id="Fill-73" fill="#FAD41F" points="52.8826059 57.0308795 52.8661889 56.9941368 52.8826059 57.0308795"></polyline>
                    <path d="M46.4594137,55.894202 C46.4367427,55.8556352 46.4109446,55.8183713 46.3861889,55.7808469 C46.4109446,55.8183713 46.4364821,55.8556352 46.4594137,55.894202" id="Fill-74" fill="#FAD41F"></path>
                    <polyline id="Fill-75" fill="#FAD41F" points="46.6814332 56.3580456 46.6585016 56.301759 46.6814332 56.3580456"></polyline>
                    <path d="M46.5811075,56.122215 C46.5680782,56.095114 46.5532248,56.0690554 46.5391531,56.042215 C46.5532248,56.0687948 46.5680782,56.095114 46.5811075,56.122215" id="Fill-76" fill="#FAD41F"></path>
                    <path d="M52.2175896,56.2274919 C52.1912704,56.209772 52.1654723,56.1912704 52.1381107,56.1748534 C52.1654723,56.1912704 52.1912704,56.209772 52.2175896,56.2274919" id="Fill-77" fill="#FAD41F"></path>
                    <path d="M64.6829967,63.4694463 C64.5618241,63.5937459 64.4122476,63.6544625 64.2337459,63.6544625 C64.0583713,63.6544625 63.9085342,63.5937459 63.7876221,63.4694463 C63.6664495,63.3451466 63.6059935,63.1921824 63.6059935,63.0105537 C63.6059935,62.8291857 63.6664495,62.6728339 63.7876221,62.5485342 C63.9085342,62.4211075 64.0583713,62.3572638 64.2337459,62.3572638 C64.4122476,62.3572638 64.5618241,62.4211075 64.6829967,62.5485342 C64.8072964,62.6728339 64.8677524,62.8291857 64.8677524,63.0105537 C64.8677524,63.1921824 64.8072964,63.3451466 64.6829967,63.4694463 Z M64.8518567,62.3859283 C64.6829967,62.2139414 64.4758306,62.1279479 64.2337459,62.1279479 C63.9914007,62.1279479 63.7876221,62.2139414 63.6185016,62.3859283 C63.4530293,62.5579153 63.3701629,62.7650814 63.3701629,63.0105537 C63.3701629,63.2526384 63.4530293,63.4598046 63.6185016,63.6320521 C63.7876221,63.8009121 63.9914007,63.8869055 64.2337459,63.8869055 C64.4758306,63.8869055 64.6829967,63.8009121 64.8518567,63.6320521 C65.0207166,63.4598046 65.1069707,63.2526384 65.1069707,63.0105537 C65.1069707,62.7650814 65.0207166,62.5579153 64.8518567,62.3859283 Z M64.2337459,62.9756352 L64.1284691,62.9756352 L64.1284691,62.7778502 L64.2337459,62.7778502 C64.3387622,62.7778502 64.3929642,62.8096417 64.3929642,62.8734853 C64.3929642,62.940456 64.3387622,62.9756352 64.2337459,62.9756352 Z M64.612899,62.8734853 C64.612899,62.6824756 64.4630619,62.5899674 64.2717915,62.5899674 L63.9119218,62.5899674 L63.9119218,63.3897068 L64.1284691,63.3897068 L64.1284691,63.1700326 L64.236873,63.1700326 L64.3898371,63.3897068 L64.6353094,63.3897068 L64.4471661,63.1348534 C64.5586971,63.0840391 64.612899,62.997785 64.612899,62.8734853 Z M51.9012378,64.9553094 C52.3163518,66.6749186 51.0717915,68.1172638 49.4499023,68.5089251 C47.828013,68.9003257 46.0239739,68.1936156 45.6088599,66.4740065 C45.3159609,65.260456 45.7563518,64.2767427 46.590228,63.6336156 C46.6699674,63.5684691 46.769772,63.5054072 46.8367427,63.482215 C46.4198046,63.5179153 46.1678176,63.497329 45.9137459,63.5828013 C45.8858632,63.5921824 45.8605863,63.562215 45.8743974,63.5361564 C46.1461889,63.0212378 46.7700326,62.7700326 47.211987,62.940456 C46.9117915,62.6783062 46.6759609,62.4690554 46.6759609,62.4690554 L47.0874267,62.1287296 C47.0874267,62.1287296 47.3508795,62.5175244 47.5424104,62.8005212 C47.7941368,62.2376547 48.4187622,62.0797394 48.7491857,62.389316 C48.7687296,62.407557 48.7575244,62.4406515 48.7309446,62.4448208 C48.5123127,62.4779153 48.4317915,62.7046254 48.4492508,62.8568078 L48.6389577,62.8330945 C50.1917915,62.6342671 51.5278176,63.4076873 51.9012378,64.9553094 Z M27.6591531,58.7979153 C27.3586971,58.6767427 27.1812378,58.4174593 27.3201303,58.1394137 C27.4246254,57.9309446 27.7313355,57.8459935 27.9656026,57.9374593 C28.2462541,58.0469055 28.2910749,58.3377199 28.4349186,58.4588925 C28.5586971,58.563127 28.7283388,58.5761564 28.8390879,58.5044951 C28.9209121,58.4515961 28.948013,58.3353746 28.9172638,58.229316 C28.8763518,58.0883388 28.7676873,58.0005212 28.6618893,57.9142671 C28.4732248,57.7610423 28.2071661,57.6291857 28.3682085,57.2109446 C28.5000651,56.8682736 28.8870358,56.8560261 28.8870358,56.8560261 C29.0407818,56.8388274 29.1783713,56.8852117 29.290684,56.9852769 C29.4407818,57.1192182 29.4699674,57.2985016 29.4446906,57.4895114 C29.421759,57.6638436 29.36,57.8168078 29.3279479,57.9895765 C29.290684,58.190228 29.397785,58.392443 29.6018241,58.4002606 C29.8699674,58.4104235 29.9504886,58.2042997 29.9833225,58.0737459 C30.0312704,57.8824756 30.0943322,57.7050163 30.2717915,57.5932248 C30.5263844,57.4327036 30.8802606,57.4678827 31.04443,57.7761564 C31.174202,58.0203257 31.1325081,58.3562215 30.9334202,58.5396743 C30.8440391,58.6220195 30.7366775,58.6509446 30.620456,58.6517264 C30.4536808,58.6530293 30.2871661,58.6488599 30.1323779,58.7267752 C30.027101,58.7799349 29.9812378,58.8661889 29.9812378,58.9824104 C29.9812378,59.0952443 30.0401303,59.1689902 30.1352443,59.2171987 C30.3147883,59.3076221 30.5128339,59.3261238 30.7067101,59.36 C30.9878827,59.4092508 31.2351792,59.5082736 31.3938762,59.7691205 L31.3980456,59.7761564 C31.5801954,60.0849511 31.3897068,60.529772 31.0314007,60.5485342 C30.2340065,60.5904886 30.0711401,59.6779153 29.7581759,59.68443 C29.6247557,59.6870358 29.5197394,59.8267101 29.5658632,59.9890554 C29.5911401,60.0781759 29.661759,60.2092508 29.7060586,60.2905537 C29.8624104,60.5774593 29.6312704,60.9018893 29.3605212,60.9292508 C28.9107492,60.975114 28.723127,60.7140065 28.7348534,60.4469055 C28.7478827,60.1472313 29.0019544,59.8407818 28.7413681,59.7104886 C28.468013,59.5736808 28.2459935,60.1081433 27.9843648,60.2272313 C27.7477524,60.335114 27.4191531,60.2514658 27.3024104,59.9887948 C27.2203257,59.8040391 27.2351792,59.4483388 27.6005212,59.3128339 C27.8287948,59.2281433 28.3371987,59.4235831 28.3632573,59.1757655 C28.3932248,58.8904235 27.8290554,58.8661889 27.6591531,58.7979153 Z M29.3573941,61.9246906 C31.1262541,61.9246906 32.5011075,60.8880782 32.5011075,58.9097068 C32.5011075,57.2865147 31.5906189,56.297329 30.2842997,55.9945277 C29.5259935,55.8457329 29.0162866,55.8697068 28.3186971,56.0221498 C27.0634528,56.354658 26.1308143,57.3331596 26.1308143,58.9097068 C26.1308143,60.8880782 27.5887948,61.9246906 29.3573941,61.9246906 Z M63.3672964,66.5527036 C63.3672964,67.1760261 63.1171336,67.6930293 62.6241042,68.0899023 C62.1576547,68.4745277 61.5444951,68.6704886 60.8028664,68.6704886 C59.8413029,68.6704886 59.0616287,68.4687948 58.3637785,68.0114658 L58.2319218,67.9184365 L59.1418893,66.4169381 C60.1868404,67.0869055 60.7267752,66.9865798 60.9326384,66.970684 C61.3847557,66.9357655 61.4337459,66.4357003 61.0598046,66.4445603 C60.7723779,66.4510749 60.2048208,66.510228 59.363127,66.1183062 C58.7744625,65.7579153 58.3906189,65.3383713 58.3906189,64.6459935 C58.3906189,64.0482085 58.6389577,63.5588274 59.1288599,63.1914007 C59.5997394,62.8383062 60.0500326,62.6428664 60.7215635,62.6118567 C61.5921824,62.5717264 62.2228013,62.7611726 63.0045603,63.1635179 L63.1692508,63.2729642 L62.3390228,64.6407818 C61.4295765,64.2764821 60.9581759,64.1771987 60.6282736,64.2402606 C60.2418241,64.3137459 60.2975896,64.6887296 60.582671,64.7267752 C60.8677524,64.7645603 61.3229967,64.6420847 62.1805863,64.9464495 C62.9250814,65.2437785 63.3672964,65.7276873 63.3672964,66.5527036 Z M49.5609121,61.7779805 L47.2716612,61.7779805 L47.2716612,56.0565472 L49.538241,56.0565472 L49.538241,56.7194788 C49.690684,56.3731596 50.3603909,55.8947231 51.0225407,55.8947231 C52.3796743,55.8947231 53.1580456,56.8341368 53.1580456,58.4719218 L53.1580456,61.7779805 L50.8714007,61.7779805 L50.8714007,58.6613681 C50.8714007,58.1811075 50.6639739,57.9374593 50.255114,57.9374593 C49.8264495,57.9374593 49.5609121,58.1180456 49.5609121,59.0175896 L49.5609121,61.7779805 Z M38.2712704,66.2749186 C38.0977199,66.4703583 37.8514658,66.5735505 37.5593485,66.5735505 C37.0876873,66.5735505 36.609772,66.2472964 36.609772,65.6239739 C36.609772,65.3764169 36.694202,65.1455375 36.8474267,64.9730293 C37.0209772,64.7778502 37.2672313,64.674658 37.5593485,64.674658 C38.0312704,64.674658 38.5089251,65.0006515 38.5089251,65.6239739 C38.5089251,65.8715309 38.4244951,66.102671 38.2712704,66.2749186 Z M38.541759,63.4277524 L38.3984365,63.2711401 C38.0010423,62.8372638 37.501759,62.6079479 36.9545277,62.6079479 C36.5683388,62.6079479 36.1615635,62.7249511 35.7777199,62.9464495 C34.9224756,63.4397394 34.4114658,64.4385668 34.4109442,65.618241 C34.4104235,66.803127 34.9211726,67.8063844 35.7777199,68.3014984 C36.1615635,68.5235179 36.570684,68.6407818 36.9610423,68.6407818 C37.5067101,68.6407818 38.0036482,68.4171987 38.3989577,67.9940065 L38.541759,67.8410423 L38.541759,68.4841694 L40.7403257,68.4841694 L40.7403257,62.769772 L38.541759,62.769772 L38.541759,63.4277524 Z M33.3029316,58.0185016 L32.7108795,58.0185016 L32.7108795,56.0461238 L33.3029316,56.0461238 L33.3029316,54.4862541 L35.5715961,54.4862541 L35.5715961,56.0461238 L36.4661889,56.0461238 L36.4661889,58.0185016 L35.5715961,58.0185016 L35.5715961,59.4522476 C35.5715961,59.7305537 35.6904235,59.8493811 35.9689902,59.8493811 L36.6874267,59.8493811 L36.6874267,61.8115961 L36.55557,61.8170684 C36.3246906,61.8269707 36.0161564,61.8402606 35.6956352,61.8402606 C34.175114,61.8402606 33.3029316,61.0772638 33.3029316,59.6002606 L33.3029316,58.0185016 Z M40.1636482,59.8538111 L40.8823453,59.8538111 L40.8823453,61.8157655 L40.750228,61.8214984 C40.5196091,61.8311401 40.2110749,61.84443 39.8902932,61.84443 C38.369772,61.84443 37.4978502,61.0816938 37.4978502,59.60443 L37.4978502,58.022671 L36.9055375,58.022671 L36.9055375,56.0502932 L37.4978502,56.0502932 L37.4978502,54.4904235 L39.7662541,54.4904235 L39.7662541,56.0502932 L40.6611075,56.0502932 L40.6611075,58.022671 L39.7662541,58.022671 L39.7662541,59.4564169 C39.7662541,59.7349837 39.8850814,59.8538111 40.1636482,59.8538111 Z M18.8849511,63.1403257 L16.9355049,63.1403257 L16.9355049,68.4914658 L14.7226059,68.4914658 L14.7226059,63.1403257 L12.7734202,63.1403257 L12.7734202,60.9639088 L18.8849511,60.9639088 L18.8849511,63.1403257 Z M44.4375244,66.5639088 L45.1570033,66.5639088 L45.1570033,68.5276873 L45.024886,68.5334202 C44.7937459,68.5433225 44.4849511,68.5566124 44.1641694,68.5566124 C42.6423453,68.5566124 41.7693811,67.7928339 41.7693811,66.3145277 L41.7693811,64.7312052 L41.1768078,64.7312052 L41.1768078,62.7572638 L41.7693811,62.7572638 L41.7693811,61.1958306 L44.0398697,61.1958306 L44.0398697,62.7572638 L44.9355049,62.7572638 L44.9355049,64.7312052 L44.0398697,64.7312052 L44.0398697,66.1662541 C44.0398697,66.4448208 44.1589577,66.5639088 44.4375244,66.5639088 Z M34.0291857,65.1783713 L34.0291857,68.4914658 L31.7237785,68.4914658 L31.7237785,65.3792834 C31.7237785,64.8904235 31.5147883,64.6426059 31.1022801,64.6426059 C30.6918567,64.6426059 30.6095114,64.9000651 30.582671,64.9847557 C30.5117915,65.2385668 30.4998046,65.3834528 30.4998046,65.6912052 L30.4998046,68.4914658 L28.2277524,68.4914658 L28.2277524,65.3792834 C28.2277524,64.8904235 28.015114,64.6426059 27.5953094,64.6426059 C27.356873,64.6426059 27.2010423,64.7585668 27.1400651,64.8578502 C27.0970684,64.9224756 27.0647557,65.0394788 27.04443,65.1215635 C27.0037785,65.356873 27.0037785,65.4410423 27.0037785,65.6912052 L27.0037785,68.4914658 L24.7953094,68.4914658 L24.7953094,62.7572638 L26.9816287,62.7572638 L26.9800651,63.2961564 C27.135114,62.9800651 27.726645,62.6079479 28.5563518,62.6079479 C29.2393485,62.6079479 29.7837134,62.8427362 30.1300326,63.2867752 L30.1912704,63.3654723 L30.2574593,63.290684 C30.6704886,62.8231922 31.1439739,62.6235831 31.8410423,62.6235831 C32.4990228,62.6235831 34.0291857,62.8727036 34.0291857,65.1783713 Z M21.2727036,66.5378502 C20.7210423,66.5378502 20.2300977,66.1203909 20.2300977,65.5455375 C20.2300977,64.9641694 20.7210423,64.5420195 21.2727036,64.5420195 C21.8332248,64.5420195 22.3153094,64.9547883 22.3153094,65.5455375 C22.3153094,66.1388925 21.8418241,66.5378502 21.2727036,66.5378502 Z M22.1957003,62.708013 C21.436873,62.5589577 21.0186319,62.5831922 20.3207818,62.7356352 C19.0647557,63.0681433 18.1315961,64.0471661 18.1315961,65.6244951 C18.1315961,67.6036482 19.6484691,68.6407818 21.3141368,68.6407818 C22.9800651,68.6407818 24.4135505,67.6036482 24.4135505,65.6244951 C24.4135505,64.0005212 23.5025407,63.0108143 22.1957003,62.708013 Z M22.0570684,56.0059935 L22.7108795,56.0059935 C23.3441042,56.0059935 23.7532248,56.3064495 23.7532248,56.7710749 C23.7532248,57.2925081 23.3732899,57.5916612 22.7108795,57.5916612 L22.0570684,57.5916612 L22.0570684,56.0059935 Z M22.0622801,59.3355049 L22.4416938,59.3355049 L23.8707492,61.7779805 L26.4375244,61.7779805 L24.8508143,59.1150489 L24.922215,59.0717915 C25.6849511,58.6105537 26.0719218,57.882215 26.0719218,56.907101 C26.0719218,55.2187622 24.9214332,54.2504235 22.9151792,54.2504235 L19.7829316,54.2504235 L19.7829316,61.7779805 L22.0622801,61.7779805 L22.0622801,59.3355049 Z M54.2676221,64.9993485 C54.3598697,64.5649511 54.7020195,64.2624104 55.1890554,64.2624104 C55.7284691,64.2624104 56.0312704,64.5779805 56.0706189,64.9993485 L54.2676221,64.9993485 Z M55.2338762,62.6079479 C54.3637785,62.6079479 53.6463844,62.8901629 53.0936808,63.4665798 C52.5409772,64.0310098 52.2704886,64.7601303 52.2704886,65.6656678 C52.2704886,66.5829316 52.56443,67.3120521 53.1523127,67.8410423 C53.740456,68.3702932 54.4813029,68.6407818 55.375114,68.6407818 C56.2738762,68.6407818 57.2281433,68.4813029 57.9908795,67.669316 L56.6029967,66.3635179 C56.3108795,66.7484039 55.9041042,66.8179805 55.3514007,66.8179805 C54.8810423,66.8179805 54.3734202,66.5592182 54.2676221,66.1008469 L58.068013,66.1008469 L58.0797394,65.5598697 C58.0797394,64.7364169 57.8327036,64.0427362 57.3388925,63.4665798 C56.8450814,62.8901629 56.1394137,62.6079479 55.2338762,62.6079479 Z M43.9992182,56.2569381 C44.5386319,56.2569381 44.8414332,56.5727687 44.8807818,56.9938762 L43.077785,56.9938762 C43.1700326,56.5594788 43.5121824,56.2569381 43.9992182,56.2569381 Z M44.1852769,60.63557 C45.0840391,60.63557 46.0383062,60.4760912 46.8010423,59.6641042 L45.4131596,58.3580456 C45.1210423,58.7431922 44.7142671,58.8127687 44.1615635,58.8127687 C43.6912052,58.8127687 43.1835831,58.5540065 43.077785,58.0953746 L46.8781759,58.0953746 L46.8899023,57.5543974 C46.8899023,56.7312052 46.6428664,56.0375244 46.1490554,55.4611075 C45.6552443,54.8849511 44.9495765,54.6027362 44.0440391,54.6027362 C43.1739414,54.6027362 42.4565472,54.8849511 41.9038436,55.4611075 C41.3511401,56.025798 41.0806515,56.754658 41.0806515,57.660456 C41.0806515,58.5777199 41.3745928,59.3065798 41.9624756,59.8358306 C42.5506189,60.3650814 43.2914658,60.63557 44.1852769,60.63557 L44.1852769,60.63557 Z" id="Fill-78" fill="#F2E93C"></path>
                    <path d="M48.1985668,43.3013681 C46.8820847,43.3013681 45.806645,42.7340717 44.9104886,41.5674267 L44.7525733,41.3620847 L42.4041694,43.7308143 L42.5091857,43.885342 C43.654202,45.5645603 45.6818241,46.5670358 47.9332899,46.5670358 C49.4261889,46.5670358 50.6452117,46.1993485 51.6599349,45.443127 C52.6829967,44.6803909 53.2018241,43.6729642 53.2018241,42.4484691 C53.2018241,40.0927687 51.805342,38.6545928 49.051987,38.1740717 L47.3521824,37.8730945 C46.4435179,37.7180456 46.4435179,37.3636482 46.4435179,37.2471661 C46.4435179,36.9289902 46.7559609,36.5889251 47.6325733,36.5889251 C48.6314007,36.5889251 49.5176547,37.0715309 50.3418893,38.0641042 L50.5060586,38.2616287 L52.8544625,35.7500977 L52.7228664,35.5960912 C51.4327036,34.0878176 49.767557,33.3232573 47.7740717,33.3232573 C46.4213681,33.3232573 45.237785,33.7081433 44.2561564,34.4672313 C43.2706189,35.2299674 42.7708143,36.2426059 42.7708143,37.4770033 C42.7708143,38.5185668 43.1317264,39.4168078 43.847557,40.1516612 C44.567557,40.8531596 45.4824756,41.3021498 46.5667752,41.4861238 L48.4789577,41.8402606 C49.5291205,42.0190228 49.5291205,42.4354397 49.5291205,42.5725081 C49.5291205,43.0220195 49.0191531,43.3013681 48.1985668,43.3013681" id="Fill-79" fill="#FFFFFE"></path>
                    <polyline id="Fill-80" fill="#FFFFFE" points="64.5636482 46.3726384 64.5636482 33.5176547 60.8732248 33.5176547 60.8732248 38.1529642 57.3276873 38.1529642 57.3276873 33.5176547 53.6549837 33.5176547 53.6549837 46.3726384 57.3276873 46.3726384 57.3276873 41.6310098 60.8732248 41.6310098 60.8732248 46.3726384 64.5636482 46.3726384"></polyline>
                    <polyline id="Fill-81" fill="#FFFFFE" points="42.1563518 36.8013029 42.1563518 33.5176547 32.362215 33.5176547 32.362215 46.3726384 42.1563518 46.3726384 42.1563518 43.0889902 36.2472964 43.0889902 36.2472964 41.4188925 41.8553746 41.4188925 41.8553746 38.2415635 36.2472964 38.2415635 36.2472964 36.8013029 42.1563518 36.8013029"></polyline>
                    <polyline id="Fill-82" fill="#FFFFFE" points="20.3220847 36.8013029 20.3220847 33.5176547 11.1293811 33.5176547 11.1293811 46.3726384 14.8020847 46.3726384 14.8020847 41.8082085 19.9150489 41.8082085 19.9150489 38.6306189 14.8020847 38.6306189 14.8020847 36.8013029 20.3220847 36.8013029"></polyline>
                    <path d="M25.9293811,39.2674919 L24.6342671,39.2674919 L24.6342671,36.8013029 L25.9293811,36.8013029 C27.0676221,36.8013029 27.8259283,37.0035179 27.8259283,37.9900977 C27.8259283,38.5386319 27.6291857,39.2674919 25.9293811,39.2674919 Z M31.4986319,38.0255375 C31.4986319,35.1609121 29.539544,33.5176547 26.1237785,33.5176547 L20.9613029,33.5176547 L20.9613029,46.3726384 L24.6342671,46.3726384 L24.6342671,42.5334202 L25.5528339,42.5334202 L27.8350489,46.3726384 L32.0599349,46.3726384 L29.3435831,41.8147231 C30.7739414,41.0407818 31.4986319,39.7672964 31.4986319,38.0255375 L31.4986319,38.0255375 Z" id="Fill-83" fill="#FFFFFE"></path>
                </g>
            </g>
        </g>
    </svg>
</span>
'''

#BUCKET audience
full_bucket = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(10.1, 0)">
            <g>
            <mask id="mask-2" fill="white">
                <polygon points="0.0178438662 0.124907063 59.6019307 0.124907063 59.6019307 79.9821561 0.0178438662 79.9821561"></polygon>
            </mask>
            <path d="M2.53115242,19.0988848 C2.76163569,23.9952416 14.8892193,27.8762825 29.8007435,27.7912268 C42.8237918,27.7168773 53.6874349,24.6411896 56.3485502,20.6004461 C55.7421561,19.9265428 54.904684,19.4643866 53.9613383,19.3391822 C53.9714498,19.220223 53.9779926,19.1003717 53.9773978,18.9787361 C53.9663941,17.0423792 52.5460223,15.4477323 50.695316,15.1503346 C50.7440892,14.8999257 50.7696654,14.6408922 50.7681784,14.3759108 C50.7559851,12.2194796 48.9977695,10.481487 46.8413383,10.4936803 C46.7925651,10.4939777 46.7449814,10.4999257 46.6965056,10.5020074 C46.8344981,10.0987361 46.9118216,9.66780669 46.9094424,9.21784387 C46.8969517,7.06141264 45.1390335,5.32342007 42.9826022,5.33561338 C42.4877323,5.33858736 42.0169517,5.43702602 41.5821561,5.60743494 C40.9653532,4.44639405 39.7811152,3.63717472 38.4002974,3.54379182 C38.1597026,1.60743494 36.5055762,0.113605948 34.506171,0.124843367 C33.247881,0.13204461 32.1350186,0.736356877 31.4263197,1.66453532 C30.7075093,0.882379182 29.6773234,0.391672862 28.5314498,0.398215613 C26.3750186,0.410408922 24.637026,2.16862454 24.6492193,4.32475836 C24.6515985,4.73665428 24.718513,5.13249071 24.8386617,5.50453532 C23.9586617,5.66780669 23.1848327,6.12520446 22.6191822,6.77144981 C22.1701115,5.09888476 20.642974,3.86973978 18.8297398,3.8798513 C17.1357621,3.88966543 15.7040892,4.97873606 15.172342,6.48981413 C13.7332342,7.07182156 12.7202974,8.48356877 12.7298141,10.1302602 C12.7318959,10.4960595 12.7878067,10.8481784 12.8838662,11.1836431 C12.398513,10.9713011 11.8634944,10.852342 11.2996283,10.8556134 C9.5994052,10.8654275 8.16327138,11.9622305 7.63598513,13.4822305 C7.13040892,13.2472862 6.56832714,13.1137546 5.973829,13.1173234 C3.81739777,13.1295167 2.07910781,14.8874349 2.09153162,17.0438662 C2.09546468,17.7549442 2.29263941,18.4187361 2.62810409,18.9909294 C2.59390335,19.0254275 2.56386617,19.063197 2.53115242,19.0988848" fill="#F9D320" mask="url(#mask-2)"></path>
            <path d="M50.9736803,68.1576208 C49.8275093,69.89829 47.6002974,71.7008178 45.2692937,72.9026022 L49.2541264,32.4853532 C51.7894424,31.6707807 54.2634944,30.5915242 56.085948,29.0438662 L50.9736803,68.1576208 Z M41.3037918,74.5885502 C37.4450558,75.8655762 35.201487,76.2614126 31.9895911,76.5766543 L32.4901115,35.0432714 C36.0383643,34.9415613 40.6301859,34.4606691 44.5427509,33.6255762 L41.3037918,74.5885502 Z M18.29829,74.5885502 L15.0596283,33.6255762 C18.9718959,34.4606691 23.5637175,34.9415613 27.1119703,35.0432714 L27.6124907,76.5766543 C24.4005948,76.2614126 22.1573234,75.8655762 18.29829,74.5885502 Z M8.62869888,68.1576208 L3.51613383,29.0438662 C5.33858736,30.5915242 7.81263941,31.6707807 10.3479554,32.4853532 L14.3327881,72.9026022 C12.0017844,71.7008178 9.77457249,69.89829 8.62869888,68.1576208 Z M50.687881,13.6110037 C50.7384387,13.8578439 50.7666914,14.1130112 50.7681784,14.3750186 C50.7696654,14.64 50.7440892,14.8990335 50.6950186,15.1494424 C52.5460223,15.4465428 53.9663941,17.0411896 53.9773978,18.9778439 C53.9779926,19.0991822 53.9714498,19.2193309 53.9613383,19.3379926 C54.904684,19.463197 55.7421561,19.9253532 56.3485502,20.5992565 C53.6877323,24.6402974 42.8237918,27.7159851 29.8010409,27.790632 C14.8895167,27.8759851 2.76193309,23.9952416 2.53115242,19.0985874 C2.56386617,19.063197 2.59390335,19.0251301 2.62810409,18.9909294 C2.39791822,18.5983643 2.23910781,18.1608922 2.15702602,17.6966543 C0.729219331,19.0518959 -0.13472119,20.1445353 0.0172490706,21.7356134 C0.0318215613,21.9482528 6.3339777,67.0709294 6.3339777,67.0709294 C7.06111524,74.2173978 17.4388104,79.9292193 29.8010409,80 C42.1632714,79.9292193 52.5412639,74.2173978 53.2681041,67.0709294 C53.2681041,67.0709294 59.5702602,21.9482528 59.5848327,21.7356134 C59.8866914,18.5531599 56.162974,15.6642379 50.687881,13.6110037 L50.687881,13.6110037 Z" fill="#DB382A" mask="url(#mask-2)"></path>
            </g>
            <path d="M15.0596283,33.6255762 L18.29829,74.5885502 C22.1573234,75.8655762 24.4005948,76.2614126 27.6124907,76.5766543 L27.1119703,35.0432714 C23.5637175,34.9415613 18.9718959,34.4606691 15.0596283,33.6255762" fill="#FFFFFE"></path>
            <path d="M31.9895911,76.5766543 C35.201487,76.2614126 37.4447584,75.8655762 41.3037918,74.5885502 L44.5424535,33.6255762 C40.6301859,34.4606691 36.0383643,34.9415613 32.4901115,35.0432714 L31.9895911,76.5766543" fill="#FFFFFE"></path>
            <path d="M45.2692937,72.9026022 C47.6002974,71.7008178 49.8275093,69.89829 50.9733829,68.1576208 L56.085948,29.0438662 C54.2634944,30.5915242 51.7894424,31.6707807 49.2541264,32.4853532 L45.2692937,72.9026022" fill="#FFFFFE"></path>
            <path d="M3.51613383,29.0438662 L8.62840149,68.1576208 C9.77457249,69.89829 12.0017844,71.7008178 14.3327881,72.9026022 L10.3479554,32.4853532 C7.81263941,31.6707807 5.33858736,30.5915242 3.51613383,29.0438662" fill="#FFFFFE"></path>
        </g>
    </svg>
</span>
'''
tipped_bucket = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(0, 12.46)">
            <g>
            <path d="M45.4780328,39.6152131 C45.9506885,38.4445902 47.6259672,37.7314098 48.8288525,37.8148197 C50.114623,37.904 51.4803934,39.2556066 51.719082,40.584918 C51.7634098,40.5366557 51.8098361,40.4910164 51.8570492,40.4461639 C52.2699016,40.0516721 52.7871475,39.7899016 53.3531803,39.7177705 C53.266623,39.3342951 53.2459016,38.9238033 53.3051803,38.5025574 C53.5142295,37.0205902 54.7034754,35.9092459 56.0650492,35.9202623 C56.9437377,35.9273443 57.714623,36.376918 58.216918,37.067541 C58.2617705,37.0114098 58.3113443,36.96 58.3596066,36.907541 C58.9340328,33.9152787 59.2980984,30.5345574 59.3809836,26.9468852 C59.6655738,14.6103607 56.5356066,4.53193443 52.3902951,4.43645902 C48.2447213,4.34072131 44.653377,14.2638689 44.3687869,26.6003934 C44.3687869,26.6003934 44.1492459,31.1000656 45.4780328,39.6152131" id="Fill-1" fill="#185A30"></path>
            <path d="M73.5446557,53.1058361 C73.7896393,52.696918 73.9265574,52.2066885 73.9171148,51.6857705 C73.9965902,50.002623 72.8411803,48.4768525 71.2335738,48.6457705 C71.28,48.4532459 71.3104262,48.2531148 71.3222295,48.0466885 C71.4184918,46.3606557 70.2557377,44.907541 68.7249836,44.8013115 C68.6914098,44.7992131 68.6583607,44.7981639 68.6250492,44.7971148 C68.7842623,44.3787541 68.8632131,43.9116066 68.8351475,43.4166557 C68.7559344,42.0139016 67.7885902,40.832 66.5300984,40.5993443 C66.075541,40.5154098 65.634623,40.5571148 65.2309508,40.696918 C64.8495738,39.757377 64.0487869,39.060459 63.074623,38.9133115 C62.9975082,37.3878033 61.8956066,36.1321967 60.4768525,36.0338361 C59.5847869,35.9719344 58.7651148,36.3816393 58.216918,37.067541 C57.714623,36.376918 56.9437377,35.9276066 56.0650492,35.9204395 C54.7034754,35.9092459 53.5142295,37.0205902 53.3051803,38.5028197 C53.2459016,38.9238033 53.266623,39.3342951 53.3531803,39.7180328 C52.7871475,39.7899016 52.2699016,40.0519344 51.8570492,40.4461639 C51.8098361,40.4910164 51.7634098,40.5366557 51.719082,40.584918 C51.4803934,39.2556066 50.114623,37.9042623 48.8288525,37.8148197 C47.6259672,37.7314098 45.928918,38.4621639 45.4780328,39.6152131 C45.6758033,41.6259672 46.9327213,47.1071475 51.4788197,52.0241311 L51.5192131,52.0270164 C51.9575082,52.4236066 52.5298361,52.6420984 53.1399344,52.5878033 C53.5181639,52.5539672 53.8664918,52.418623 54.1665574,52.2098361 L54.2397377,52.2148197 C54.6397377,52.4925902 55.1205246,52.6379016 55.6285902,52.5927869 C55.8226885,52.5754754 56.0078689,52.5287869 56.1838689,52.4621639 C56.6192787,53.3623607 57.5902951,53.9441311 58.6740984,53.8486557 C59.5134426,53.7746885 60.2268852,53.3104262 60.6462951,52.6570492 L60.7821639,52.6664918 C61.2010492,53.0817049 61.7579016,53.323541 62.3585574,53.3054426 C62.855082,54.0566557 63.767082,54.5188197 64.7735082,54.4304262 C65.1525246,54.3971148 65.5063607,54.2874754 65.8219016,54.1214426 C66.3483279,54.7690492 67.2123279,55.1540984 68.1602623,55.0706885 C69.0974426,54.9885902 69.8890492,54.4689836 70.3197377,53.7505574 C70.7428197,54.0902295 71.272918,54.2725246 71.8358033,54.2224262 C72.3819016,54.1736393 72.8671475,53.9158033 73.2317377,53.5257705 L73.2925902,53.5299672 C73.3754754,53.4098361 73.4462951,53.2868197 73.5121311,53.1627541 C73.5137049,53.1603934 73.5150164,53.1577705 73.5163279,53.1554098 C73.5252459,53.1388852 73.5362623,53.122623 73.5446557,53.1058361" fill="#F9D320"></path>
            <path d="M42.2090492,9.21232787 L6.56209836,12.7268197 C7.62203279,10.6709508 9.21206557,8.70662295 10.7472787,7.6957377 L45.2440656,3.18662295 C43.8793443,4.79422951 42.9272131,6.9762623 42.2090492,9.21232787 Z M45.2440656,49.5517377 L10.7472787,45.042623 C9.21206557,44.032 7.62203279,42.0674098 6.56209836,40.0118033 L42.2090492,43.5262951 C42.9272131,45.7620984 43.8793443,47.9443934 45.2440656,49.5517377 Z M5.07514754,36.5143607 C3.94885246,33.1108197 3.6,31.1323279 3.32170492,28.2992787 L39.9527869,28.7409836 C40.0427541,31.8701639 40.4668852,35.9202623 41.2031475,39.3707541 L5.07514754,36.5143607 Z M5.07514754,16.224 L41.2031475,13.3676066 C40.4668852,16.8180984 40.0427541,20.8681967 39.9527869,23.9976393 L3.32170492,24.439082 C3.6,21.6062951 3.94885246,19.627541 5.07514754,16.224 Z M56.7186885,3.84865574 C54.4333115,1.18767213 52.7926557,-0.0616393443 51.3872787,0.100721311 C51.1252459,0.134032787 11.4032787,5.67213115 11.4032787,5.67213115 C5.10006557,6.31318033 0.0624262295,15.4659672 0,26.3693115 C0.0624262295,37.2723934 5.10006557,46.4251803 11.4032787,47.0664918 C11.4032787,47.0664918 51.1997377,52.6247869 51.3872787,52.6376393 C51.7196066,52.635541 52.0477377,52.5909508 52.3711475,52.5080656 C52.0563934,52.4144262 51.7660328,52.2504918 51.5192131,52.0270164 L51.4788197,52.0241311 C46.9327213,47.1074098 45.6758033,41.6259672 45.4780328,39.6152131 C45.4785574,39.6136393 45.4796066,39.6123279 45.4801311,39.6107541 C45.4796066,39.6123279 45.4785574,39.6136393 45.4780328,39.6152131 C44.1492459,31.1000656 44.3687869,26.6003934 44.3687869,26.6003934 C44.653377,14.2638689 48.2447213,4.34072131 52.3902951,4.43619672 C56.5356066,4.53193443 59.6655738,14.6103607 59.3809836,26.9468852 C59.2980984,30.5345574 58.9340328,33.9152787 58.3596066,36.907541 C58.9497705,36.2562623 59.741377,35.9819016 60.4768525,36.0338361 C60.6121967,36.043541 60.7438689,36.0663607 60.872918,36.096 C63.3904262,22.3210492 60.7512131,8.87029508 56.7186885,3.84865574 L56.7186885,3.84865574 Z" fill="#129B47"></path>
            </g>
            <path d="M41.2031475,13.3676066 L5.07514754,16.224 C3.94885246,19.627541 3.6,21.6062951 3.32170492,24.439082 L39.9527869,23.997377 C40.0427541,20.8681967 40.4668852,16.8180984 41.2031475,13.3676066" fill="#FFFFFE"></path>
            <path d="M45.2440656,3.18662295 L10.7472787,7.6957377 C9.21206557,8.70662295 7.62203279,10.6709508 6.56209836,12.7268197 L42.2090492,9.21232787 C42.9272131,6.9762623 43.8793443,4.79422951 45.2440656,3.18662295" fill="#FFFFFE"></path>
            <path d="M6.56209836,40.011541 C7.62203279,42.0674098 9.21206557,44.032 10.7472787,45.042623 L45.2440656,49.5517377 C43.8793443,47.9443934 42.9272131,45.7620984 42.2090492,43.5262951 L6.56209836,40.011541" fill="#FFFFFE"></path>
            <g transform="translate(3.15, 28)">
            <path d="M36.8052459,0.675409836 L0.174163934,0.233704918 C0.452459016,3.0664918 0.801311475,5.0452459 1.92760656,8.44878689 L38.0556066,11.3051803 C37.3193443,7.85468852 36.8952131,3.80459016 36.8052459,0.675409836" fill="#FFFFFE"></path>
            </g>
        </g>
    </svg>
</span>
'''
empty_bucket = '''
<span class="icon">
    <!--?xml version="1.0" encoding="UTF-8"?-->
    <svg width="40px" height="40px" viewBox="0 0 80 80" preserveAspectRatio="xMidYMid" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g transform="translate(10.1, 0)">
            <path d="M2.53115242,19.0988848 C2.76163569,23.9952416 14.8892193,27.8762825 29.8007435,27.7912268 C42.8237918,27.7168773 53.6874349,24.6411896 56.3485502,20.6004461 C55.7421561,19.9265428 54.904684,19.4643866 53.9613383,19.3391822 C53.9714498,19.220223 53.9779926,19.1003717 53.9773978,18.9787361 C53.9663941,17.0423792 52.5460223,15.4477323 50.695316,15.1503346 C50.7440892,14.8999257 50.7696654,14.6408922 50.7681784,14.3759108 C50.7559851,12.2194796 48.9977695,10.481487 46.8413383,10.4936803 C46.7925651,10.4939777 46.7449814,10.4999257 46.6965056,10.5020074 C46.8344981,10.0987361 46.9118216,9.66780669 46.9094424,9.21784387 C46.8969517,7.06141264 45.1390335,5.32342007 42.9826022,5.33561338 C42.4877323,5.33858736 42.0169517,5.43702602 41.5821561,5.60743494 C40.9653532,4.44639405 39.7811152,3.63717472 38.4002974,3.54379182 C38.1597026,1.60743494 36.5055762,0.113605948 34.506171,0.124843367 C33.247881,0.13204461 32.1350186,0.736356877 31.4263197,1.66453532 C30.7075093,0.882379182 29.6773234,0.391672862 28.5314498,0.398215613 C26.3750186,0.410408922 24.637026,2.16862454 24.6492193,4.32475836 C24.6515985,4.73665428 24.718513,5.13249071 24.8386617,5.50453532 C23.9586617,5.66780669 23.1848327,6.12520446 22.6191822,6.77144981 C22.1701115,5.09888476 20.642974,3.86973978 18.8297398,3.8798513 C17.1357621,3.88966543 15.7040892,4.97873606 15.172342,6.48981413 C13.7332342,7.07182156 12.7202974,8.48356877 12.7298141,10.1302602 C12.7318959,10.4960595 12.7878067,10.8481784 12.8838662,11.1836431 C12.398513,10.9713011 11.8634944,10.852342 11.2996283,10.8556134 C9.5994052,10.8654275 8.16327138,11.9622305 7.63598513,13.4822305 C7.13040892,13.2472862 6.56832714,13.1137546 5.973829,13.1173234 C3.81739777,13.1295167 2.07910781,14.8874349 2.09153162,17.0438662 C2.09546468,17.7549442 2.29263941,18.4187361 2.62810409,18.9909294 C2.59390335,19.0254275 2.56386617,19.063197 2.53115242,19.0988848" fill="#DEDEDF"></path>
            <path d="M50.9736803,68.1576208 C49.8275093,69.89829 47.6002974,71.7008178 45.2692937,72.9026022 L49.2541264,32.4853532 C51.7894424,31.6707807 54.2634944,30.5915242 56.085948,29.0438662 L50.9736803,68.1576208 Z M41.3037918,74.5885502 C37.4450558,75.8655762 35.201487,76.2614126 31.9895911,76.5766543 L32.4901115,35.0432714 C36.0383643,34.9415613 40.6301859,34.4606691 44.5427509,33.6255762 L41.3037918,74.5885502 Z M18.29829,74.5885502 L15.0596283,33.6255762 C18.9718959,34.4606691 23.5637175,34.9415613 27.1119703,35.0432714 L27.6124907,76.5766543 C24.4005948,76.2614126 22.1573234,75.8655762 18.29829,74.5885502 Z M8.62869888,68.1576208 L3.51613383,29.0438662 C5.33858736,30.5915242 7.81263941,31.6707807 10.3479554,32.4853532 L14.3327881,72.9026022 C12.0017844,71.7008178 9.77457249,69.89829 8.62869888,68.1576208 Z M50.687881,13.6110037 C50.7384387,13.8578439 50.7666914,14.1130112 50.7681784,14.3750186 C50.7696654,14.64 50.7440892,14.8990335 50.6950186,15.1494424 C52.5460223,15.4465428 53.9663941,17.0411896 53.9773978,18.9778439 C53.9779926,19.0991822 53.9714498,19.2193309 53.9613383,19.3379926 C54.904684,19.463197 55.7421561,19.9253532 56.3485502,20.5992565 C53.6877323,24.6402974 42.8237918,27.7159851 29.8010409,27.790632 C14.8895167,27.8759851 2.76193309,23.9952416 2.53115242,19.0985874 C2.56386617,19.063197 2.59390335,19.0251301 2.62810409,18.9909294 C2.39791822,18.5983643 2.23910781,18.1608922 2.15702602,17.6966543 C0.729219331,19.0518959 -0.13472119,20.1445353 0.0172490706,21.7356134 C0.0318215613,21.9482528 6.3339777,67.0709294 6.3339777,67.0709294 C7.06111524,74.2173978 17.4388104,79.9292193 29.8010409,80 C42.1632714,79.9292193 52.5412639,74.2173978 53.2681041,67.0709294 C53.2681041,67.0709294 59.5702602,21.9482528 59.5848327,21.7356134 C59.8866914,18.5531599 56.162974,15.6642379 50.687881,13.6110037 L50.687881,13.6110037 Z" fill="#BCBDBE"></path>
        </g>
    </svg>
</span>
'''
hot_bucket = '''
<span class="icon">
    <svg width="40px" height="40px" xmlns="http://www.w3.org/2000/svg" id="Layer_2" viewBox="0 0 293.22 306.5"><defs><style>.cls-1{fill:none}.cls-2{fill:#fa320a}.cls-3{fill:#005d7a}.cls-4{fill:#007870}.cls-6{fill:#e09b00;opacity:.5}.cls-8{fill:#fff}.cls-9{fill:#ffe600}.cls-10{fill:gold}</style></defs><g id="Layer_1-2"><path d="M269.93 213.81c-.35.61-.7 1.21-1.08 1.79.38-.59.73-1.19 1.08-1.79M271.04 211.72c-.3.61-.61 1.23-.95 1.82.33-.6.65-1.21.95-1.82M20.22 206.99c-.19-.56-.35-1.13-.51-1.69.16.57.32 1.14.51 1.69M22.04 211.45c-.24-.49-.45-1-.67-1.5.22.5.43 1.01.67 1.5M264.24 221.4c-.51.52-1.02 1.04-1.56 1.53.54-.5 1.05-1.01 1.56-1.53M262.51 223.08q-.81.735-1.65 1.44.855-.69 1.65-1.44M274.11 202.83c-.13.61-.26 1.22-.42 1.82.16-.6.29-1.21.42-1.82M19.53 204.67c-.14-.52-.25-1.06-.37-1.59.12.53.23 1.07.37 1.59M18.98 202.3c-.11-.56-.19-1.12-.28-1.69.09.56.17 1.13.28 1.69M272.81 207.47c-.21.59-.41 1.18-.65 1.75.23-.58.44-1.16.65-1.75M271.97 209.67c-.25.59-.5 1.17-.77 1.75.28-.57.53-1.16.77-1.75M273.53 205.18c-.17.6-.34 1.19-.53 1.78.2-.59.37-1.18.53-1.78M274.55 200.36c-.09.65-.19 1.29-.32 1.93.13-.64.22-1.28.32-1.93M32.42 224.56c-.52-.42-1.02-.87-1.52-1.31.5.45 1 .89 1.52 1.31M34.35 226.03c-.56-.4-1.1-.81-1.63-1.23.53.42 1.07.84 1.63 1.23M28.86 221.29q-.705-.75-1.38-1.53c.45.52.9 1.03 1.38 1.53M27.25 219.5c-.45-.53-.87-1.07-1.28-1.62.42.55.84 1.1 1.28 1.62M23.15 213.58c-.3-.53-.57-1.07-.84-1.61.27.54.54 1.08.84 1.61M260.67 224.66c-.57.46-1.14.9-1.74 1.33.6-.42 1.17-.87 1.74-1.33M24.39 215.64c-.33-.51-.64-1.03-.94-1.56.31.52.61 1.05.94 1.56M30.58 222.98c-.51-.47-1-.96-1.49-1.46.48.5.97.99 1.49 1.46" class="cls-1"></path><path d="M260.67 224.66c.06-.05.13-.1.19-.14q.855-.69 1.65-1.44c.06-.05.12-.1.17-.15.54-.5 1.05-1.01 1.56-1.53.05-.05.11-.1.16-.16.51-.54 1.01-1.1 1.49-1.67.04-.04.07-.08.11-.12.46-.54.89-1.1 1.32-1.67.05-.07.11-.14.17-.21.43-.59.84-1.19 1.24-1.8.04-.06.08-.12.12-.17.38-.59.73-1.19 1.08-1.79.05-.09.11-.17.16-.26.33-.6.65-1.21.95-1.82.05-.1.11-.2.16-.31.28-.57.53-1.16.77-1.75.06-.15.14-.3.2-.45.23-.58.44-1.16.65-1.75.06-.17.13-.34.19-.51.2-.59.37-1.18.53-1.78.05-.18.11-.35.16-.53.16-.6.29-1.21.42-1.82.04-.18.09-.36.13-.55.13-.64.22-1.28.32-1.93.02-.16.06-.32.08-.48.09-.69.15-1.39.2-2.08 0-.12.03-.24.03-.36.05-.82.08-1.64.08-2.47V85.35c0-14.9-8.76-28.51-22.32-34.68L162.39 9.6a38.1 38.1 0 0 0-31.56 0L40.58 50.67c-13.56 6.17-22.32 19.78-22.32 34.68v109.61c0 1.66.11 3.31.32 4.93.03.24.08.48.12.73.09.56.17 1.13.28 1.69.05.26.12.52.18.78.12.53.23 1.07.37 1.59.06.21.13.42.19.63.16.57.32 1.14.51 1.69.06.19.14.38.21.57.2.57.4 1.13.63 1.69.1.24.21.47.31.7.22.5.43 1.01.67 1.5.09.18.18.35.27.52.27.54.54 1.08.84 1.61.09.17.2.33.3.5.31.53.61 1.05.94 1.56l.27.39c.36.54.72 1.07 1.1 1.59.07.09.14.17.21.26.42.55.84 1.1 1.28 1.62.07.09.16.17.23.26.45.52.9 1.03 1.38 1.53.08.08.16.15.24.23.48.5.98.99 1.49 1.46.1.09.21.18.31.27.5.45 1 .89 1.52 1.31.1.08.21.15.31.23.53.42 1.07.84 1.63 1.23.13.09.27.17.4.26.54.37 1.09.74 1.65 1.09 3.09-.53 6.19-1.02 9.3-1.51l201.82-.02c3.12.49 6.21.95 9.37 1.48.62-.38 1.22-.79 1.81-1.2.07-.05.15-.1.23-.15.6-.42 1.17-.87 1.74-1.33Z" style="fill:#4cbfb4"></path><path d="M255.19 45.04 164.95 3.98a44.3 44.3 0 0 0-36.68 0L38.02 45.04c-15.76 7.17-25.94 22.99-25.94 40.3v109.61c0 13.24 5.97 25.6 15.83 33.89 2.81-.51 5.63-1 8.46-1.48-.55-.34-1.08-.7-1.62-1.07-.13-.09-.27-.17-.4-.26-.56-.4-1.1-.81-1.63-1.23-.1-.08-.21-.15-.31-.23-.52-.42-1.02-.87-1.52-1.31-.1-.09-.21-.18-.31-.27-.51-.47-1-.96-1.49-1.46-.08-.08-.16-.15-.24-.23q-.705-.75-1.38-1.53c-.08-.09-.16-.17-.23-.26-.45-.53-.87-1.07-1.28-1.62-.07-.09-.14-.17-.21-.26-.38-.52-.74-1.05-1.1-1.59l-.27-.39c-.33-.51-.64-1.03-.94-1.56-.1-.17-.2-.33-.3-.5-.3-.53-.57-1.07-.84-1.61-.09-.18-.19-.35-.27-.52-.24-.49-.45-1-.67-1.5-.1-.24-.21-.46-.31-.7-.23-.56-.43-1.12-.63-1.69-.07-.19-.15-.38-.21-.57-.19-.56-.35-1.13-.51-1.69-.06-.21-.13-.41-.19-.63-.14-.52-.25-1.06-.37-1.59-.06-.26-.13-.52-.18-.78-.11-.56-.19-1.12-.28-1.69-.04-.24-.09-.48-.12-.73-.21-1.62-.32-3.27-.32-4.93V85.35c0-14.9 8.76-28.51 22.32-34.68L130.82 9.6a38.106 38.106 0 0 1 31.56 0l90.24 41.07c13.56 6.17 22.32 19.78 22.32 34.68v109.61c0 .83-.03 1.65-.08 2.47 0 .12-.03.24-.03.36-.05.7-.11 1.39-.2 2.08-.02.16-.06.32-.08.48-.09.65-.19 1.29-.32 1.93-.04.18-.09.36-.13.55-.13.61-.26 1.22-.42 1.82-.05.18-.11.36-.16.53-.17.6-.34 1.19-.53 1.78-.06.17-.13.34-.19.51-.21.59-.41 1.18-.65 1.75-.06.15-.14.3-.2.45-.25.59-.5 1.18-.77 1.75-.05.1-.11.2-.16.31-.3.61-.61 1.23-.95 1.82-.05.09-.11.17-.16.26-.35.61-.7 1.21-1.08 1.79-.04.06-.08.12-.12.17-.4.61-.81 1.21-1.24 1.8-.05.07-.11.14-.17.21-.43.57-.86 1.13-1.32 1.67-.04.04-.07.08-.11.12-.48.57-.98 1.13-1.49 1.67-.05.05-.11.1-.16.16-.51.52-1.02 1.04-1.56 1.53-.06.05-.12.1-.17.15q-.81.735-1.65 1.44c-.06.05-.13.1-.19.14-.57.46-1.14.9-1.74 1.33-.07.05-.15.1-.23.15-.57.4-1.15.8-1.75 1.17 2.79.47 5.61.97 8.44 1.48 9.8-8.29 15.74-20.62 15.74-33.82V85.36c0-17.31-10.18-33.13-25.94-40.3Z" class="cls-4"></path><path d="M19.16 203.08c-.06-.26-.13-.52-.18-.78.05.26.12.52.18.78M32.73 224.8c-.1-.08-.21-.15-.31-.23.1.08.21.15.31.23M30.9 223.25c-.1-.09-.21-.18-.31-.27.1.09.21.18.31.27M18.7 200.61c-.04-.24-.09-.48-.12-.73.03.24.08.48.12.73M19.72 205.29c-.06-.21-.13-.41-.19-.63.06.21.13.42.19.63M23.45 214.08c-.1-.17-.2-.33-.3-.5.09.17.2.33.3.5M24.66 216.02l-.27-.39c.08.13.18.26.27.39M21.37 209.95c-.1-.24-.21-.47-.31-.7.1.24.21.47.31.7M22.31 211.97c-.09-.18-.19-.35-.27-.52.09.18.18.35.27.52M29.1 221.52c-.08-.08-.16-.15-.24-.23.08.08.16.15.24.23M25.97 217.87c-.07-.09-.14-.17-.21-.26.07.09.14.17.21.26M27.49 219.76c-.08-.09-.16-.17-.23-.26.08.09.16.17.23.26M20.43 207.56c-.07-.19-.15-.38-.21-.57.06.19.14.38.21.57M260.86 224.52c-.06.05-.13.1-.19.14.06-.05.13-.1.19-.14M266 219.45s-.07.08-.11.12c.04-.04.07-.08.11-.12M267.49 217.57c-.05.07-.11.14-.17.21.05-.07.11-.14.17-.21M268.85 215.6c-.04.06-.08.12-.12.17.04-.06.08-.12.12-.17M264.4 221.24c-.05.05-.11.1-.16.16.05-.05.11-.1.16-.16M258.7 226.14c.07-.05.15-.1.23-.15-.07.05-.15.1-.23.15M34.75 226.3c-.13-.09-.27-.17-.4-.26.13.09.27.17.4.26M262.68 222.93c-.06.05-.12.1-.17.15.06-.05.12-.1.17-.15M273 206.96c-.06.17-.13.34-.19.51.06-.17.13-.34.19-.51M274.24 202.28c-.04.18-.09.36-.13.55.04-.18.09-.36.13-.55M274.63 199.88c-.02.16-.06.32-.08.48.02-.16.06-.32.08-.48M273.69 204.65c-.05.18-.11.36-.16.53.05-.18.11-.35.16-.53M270.09 213.54c-.05.09-.11.17-.16.26.05-.09.11-.17.16-.26M274.87 197.43c0 .12-.03.24-.03.36 0-.12.03-.24.03-.36M271.19 211.41c-.05.1-.11.2-.16.31.05-.1.11-.2.16-.31M272.17 209.22c-.06.15-.14.3-.2.45.06-.15.14-.3.2-.45" class="cls-4"></path><path d="M171.2 261.1c-.98.15-1.96.3-2.95.44.89-.25 1.88-.4 2.95-.44" class="cls-10"></path><path d="M65.83 286.85c-15.97 1.01-29.64 8.76-37.68 19.45-.25.28-.64.27-.76-.03-2.75-11.1-3.51-22.94-2.12-34.87 0-.13-.11-.22-.27-.25-7.51-2.36-15.82-3.65-24.65-3.52-.48.05-.47-.41.03-.89a92.85 92.85 0 0 1 33.3-20.68q6.525 18.405 12.78 36.87c.08.24.41.37.75.31.06 0 10.29-1.8 17.99-2.86l.62 6.48Zm227-20.12a92.5 92.5 0 0 0-33.31-20.68 2772 2772 0 0 0-12.79 36.87c-.08.24-.41.37-.75.31-.05 0-10.4-1.82-17.98-2.85-.27 3.02-.62 6.47-.62 6.47 15.97 1.01 29.64 8.76 37.68 19.45.25.28.64.27.76-.03 2.75-11.1 3.51-22.94 2.12-34.87 0-.13.11-.22.27-.25 7.51-2.36 15.82-3.65 24.65-3.52.48.05.47-.41-.03-.89Z" style="fill:#ffd215"></path><path d="m246.08 283.24-18.7 3.61.62-6.47c5.96.85 12.16 1.83 18.08 2.87Zm-198.96 0 18.71 3.61-.62-6.48c-5.96.85-12.17 1.83-18.09 2.87" style="fill:#e09b00"></path><path d="m46.58 283.24-19.04-54.33c70.6-12.83 144.51-17.01 238.14-.08l-19.07 54.41c-65.25-10.44-124.9-12.55-200.04 0Z" style="fill:#ffec00"></path><path d="M225.67 110.11c.19.93.3 1.9.3 2.89 0 1-.09 1.98-.28 2.93 7.01 1.12 12.38 7.16 12.42 14.49 0 .46-.02.91-.06 1.36 3.57.47 6.74 2.22 9.04 4.77-10.07 15.3-51.19 26.94-100.49 27.22-56.44.32-102.35-14.37-103.22-32.9.12-.13.24-.28.37-.41-.87-1.49-1.47-3.14-1.78-4.9-5.4 5.13-8.67 9.27-8.1 15.29.03.4 5.9 42.58 11.83 85.02 2.9-.46 5.82-.89 8.74-1.32l-7.32-56.04c6.9 5.86 16.26 9.94 25.86 13.03l3.95 40.1c5.48-.61 11.01-1.16 16.58-1.64l-2.7-34.15c14.81 3.16 32.19 4.98 45.62 5.37l.32 26.57c6.49-.1 13.06-.09 19.72.02l.32-26.59c13.43-.39 30.81-2.21 45.62-5.37l-2.7 34.19c5.46.47 10.99 1.02 16.58 1.64l3.96-40.14c9.6-3.08 18.96-7.17 25.86-13.03l-7.32 56.01a580 580 0 0 1 8.74 1.33c5.92-42.43 11.8-84.61 11.82-85.01 1.14-12.05-12.95-22.98-33.68-30.75Z" class="cls-2"></path><path d="M72.98 181.55c-9.6-3.08-18.96-7.17-25.86-13.03l7.32 56.04c7.43-1.08 14.92-2.06 22.49-2.91zM136.43 191.23c-13.43-.39-30.81-2.21-45.62-5.37l2.7 34.15c14.08-1.21 28.45-1.99 43.24-2.22l-.32-26.57ZM202.41 185.86c-14.81 3.16-32.19 4.98-45.62 5.37l-.32 26.59c13.99.23 28.38.96 43.24 2.23zM246.1 168.52c-6.9 5.86-16.26 9.94-25.86 13.03l-3.96 40.14c7.38.82 14.86 1.75 22.5 2.85l7.32-56.01Z" class="cls-8"></path><path d="M43.39 130.88c.87 18.53 46.78 33.22 103.22 32.9 49.29-.28 90.41-11.92 100.49-27.22-2.3-2.55-5.47-4.3-9.04-4.77.04-.45.06-.9.06-1.36-.04-7.33-5.42-13.37-12.42-14.49.19-.95.28-1.93.28-2.93-.05-8.16-6.7-14.74-14.86-14.69-.19 0-.36.02-.55.03.52-1.53.82-3.16.81-4.86-.05-8.16-6.7-14.74-14.86-14.69-1.87.01-3.66.38-5.3 1.03-2.33-4.4-6.82-7.46-12.04-7.81-.91-7.33-7.17-12.98-14.74-12.94-4.76.03-8.97 2.31-11.66 5.83-2.72-2.96-6.62-4.82-10.96-4.79-8.16.05-14.74 6.7-14.69 14.86 0 1.56.26 3.06.72 4.47-3.33.62-6.26 2.35-8.4 4.8-1.7-6.33-7.48-10.98-14.34-10.94-6.41.04-11.83 4.16-13.84 9.88-5.45 2.2-9.28 7.55-9.24 13.78 0 1.38.22 2.72.58 3.99-1.84-.8-3.86-1.25-6-1.24-6.44.04-11.87 4.19-13.87 9.94-1.91-.89-4.04-1.39-6.29-1.38-8.16.05-14.74 6.7-14.69 14.86.02 2.69.76 5.2 2.03 7.37-.13.13-.24.27-.37.41ZM171.2 261.24c-.98.15-1.96.3-2.95.44.89-.25 1.88-.4 2.95-.44" class="cls-10"></path><path d="m46.58 283.38-19.04-54.33c70.6-12.83 144.51-17.01 238.14-.08l-19.07 54.41c-65.25-10.44-124.9-12.55-200.04 0Z" class="cls-9"></path><path d="M152.4 181.15c-10.02 0-18.17-4.61-22.95-12.21v7.35a4.12 4.12 0 0 1-4.12 4.12h-15.12a4.12 4.12 0 0 1-4.12-4.12v-14.98h-3.19v14.98a4.12 4.12 0 0 1-4.12 4.12H83.66a4.12 4.12 0 0 1-4.12-4.12v-49.17a4.12 4.12 0 0 1 4.12-4.12h15.12a4.12 4.12 0 0 1 4.12 4.12v14.02h3.19v-14.02a4.12 4.12 0 0 1 4.12-4.12h15.12a4.12 4.12 0 0 1 4.12 4.12v7.17c4.74-7.55 12.86-12.03 23.02-12.03 7.42 0 13.43 2.16 18.3 6.6v-1.75a4.12 4.12 0 0 1 4.12-4.12h34.65a4.12 4.12 0 0 1 4.12 4.12v11.8a4.12 4.12 0 0 1-4.12 4.12h-6.05v33.26a4.12 4.12 0 0 1-4.12 4.12h-14.3a4.12 4.12 0 0 1-4.12-4.12v-14.64l-2.61.31c-3.56 11.67-13.24 19.19-25.94 19.19" class="cls-2"></path><path d="M83.68 127.11H98.8v18.14h11.43v-18.14h15.12v49.18h-15.12v-19.1H98.8v19.1H83.68zm68.79-.73c6.93 0 12.24 2.06 16.59 6.56 4.5 4.72 6.64 10.62 6.64 18.65 0 15.04-9.51 25.44-23.3 25.44s-23.45-10.17-23.45-25.29 9.36-25.36 23.52-25.36m6.41 32.22c.29-1.99.59-5.53.59-8.18 0-8.7-2.21-12.9-6.93-12.9s-7.37 5.09-7.37 14.67 2.36 13.71 7.15 13.71c3.76 0 5.75-2.29 6.56-7.3m26.18-19.69h-10.18v-11.8h34.65v11.8h-10.17v37.38h-14.3zM207.5 220.82c-.82-5.91-4.54-9.49-10.14-9.49-1.51 0-3.03.48-4.32 1.19-.37-.35-.87-.57-1.42-.57h-8.77c-.5 0-.96.18-1.31.47-.42-.72-.91-1.41-1.47-2.06-2.3-2.68-5.56-4.04-9.71-4.04s-7.25 1.33-9.75 3.94c-.7.72-1.31 1.49-1.81 2.33v-6.71h-13.76c-1.14 0-2.06.92-2.06 2.06v3.97h-.23c-.3 0-3.1-.02-3.1-.02v-3.97c0-1.14-.92-2.06-2.06-2.06h-8.77c-1.14 0-2.06.92-2.06 2.06v3.97h-.23c-1.14 0-2.06.92-2.06 2.06v1.7c-1.72-1.9-4.06-3.26-6.93-3.92-1.48-.29-2.74-.42-3.98-.42-1.37 0-2.75.17-4.55.56-2.51.66-4.61 1.85-6.23 3.46-.84-6.54-6-10.38-14.15-10.38H76.51c-1.14 0-2.06.92-2.06 2.06v14.98c41.16-4.78 84.52-5.92 133.04-1.19Z" class="cls-8"></path><path d="M181.37 219.82c0-3.18-.96-5.87-2.87-8.1s-4.64-3.32-8.14-3.32-6.14 1.09-8.28 3.32c-2.14 2.18-3.18 5-3.18 8.51s1.14 6.37 3.41 8.42 5.14 3.09 8.6 3.09 7.17-.62 10.12-3.76l-5.37-5.05c-1.13 1.49-2.7 1.76-4.84 1.76-1.82 0-3.78-1-4.19-2.78h14.7l.05-2.09Zm-14.74-2.17c.36-1.68 1.68-2.85 3.56-2.85 2.09 0 3.26 1.22 3.41 2.85zM224.65 250.78c0-3.18-.96-5.87-2.87-8.1s-4.64-3.32-8.14-3.32-6.14 1.09-8.28 3.32c-2.14 2.18-3.18 5-3.18 8.51s1.14 6.37 3.41 8.42 5.14 3.09 8.6 3.09 7.17-.62 10.12-3.76l-5.37-5.05c-1.13 1.49-2.7 1.76-4.84 1.76-1.82 0-3.78-1-4.19-2.77h14.7l.05-2.09Zm-14.74-2.17c.36-1.68 1.68-2.85 3.56-2.85 2.09 0 3.26 1.22 3.41 2.85zM96.12 225.85l.28-.17c2.95-1.78 4.45-4.6 4.45-8.37 0-6.53-4.45-10.28-12.21-10.28H76.52v29.12h8.82v-9.45h1.47l5.53 9.45h9.93l-6.14-10.3Zm-8.27-5.89h-2.53v-6.13h2.53c2.45 0 4.03 1.16 4.03 2.96 0 2.02-1.47 3.17-4.03 3.17M85.85 239.75c-2.93-.58-4.55-.48-7.25.11-4.86 1.29-8.47 5.07-8.47 11.17 0 7.66 5.87 11.67 12.31 11.67s11.99-4.01 11.99-11.67c0-6.28-3.52-10.11-8.58-11.28m-3.57 14.81c-2.13 0-4.03-1.61-4.03-3.84s1.9-3.88 4.03-3.88 4.03 1.6 4.03 3.88-1.83 3.84-4.03 3.84M131.63 249.3v12.82h-8.92v-12.04c0-1.89-.81-2.85-2.4-2.85s-1.91 1-2.01 1.32c-.27.98-.32 1.54-.32 2.73v10.83h-8.79v-12.04c0-1.89-.82-2.85-2.45-2.85-.92 0-1.52.45-1.76.83-.17.25-.29.7-.37 1.02-.16.91-.16 1.24-.16 2.2v10.83h-8.54v-22.18h8.46V242c.59-1.22 2.88-2.66 6.09-2.66 2.64 0 4.75.91 6.09 2.63l.24.3.26-.29c1.6-1.81 3.43-2.58 6.13-2.58 2.54 0 8.46.96 8.46 9.88ZM171.89 254.66h2.78v7.6l-.51.02c-.89.04-2.09.09-3.33.09-5.89 0-9.26-2.95-9.26-8.67v-6.12h-2.29v-7.64h2.29v-6.04h8.78v6.04h3.46v7.64h-3.46v5.55c0 1.08.46 1.54 1.54 1.54Z" class="cls-3"></path><path d="M73.05 241.42h-7.54v20.7h-8.56v-20.7h-7.54V233h23.64zM155.35 228.71h2.78v7.59l-.51.02c-.89.04-2.09.09-3.33.09-5.88 0-9.25-2.95-9.25-8.66v-6.12h-2.29V214h2.29v-6.03h8.77V214h3.46v7.63h-3.46v5.55c0 1.08.46 1.54 1.54 1.54ZM128.82 221.61h-2.29v-7.63h2.29v-6.03h8.77v6.03h3.46v7.63h-3.46v5.55c0 1.08.46 1.54 1.54 1.54h2.78v7.59l-.51.02c-.89.04-2.09.09-3.33.09-5.88 0-9.25-2.95-9.25-8.66v-6.12ZM149.08 239.99v2.54l-.55-.61c-1.54-1.68-3.47-2.56-5.59-2.56-1.49 0-3.07.45-4.55 1.31-3.31 1.91-5.28 5.77-5.29 10.33 0 4.58 1.97 8.46 5.29 10.38 1.48.86 3.07 1.31 4.58 1.31 2.11 0 4.03-.87 5.56-2.5l.55-.59v2.49h8.5v-22.1zm-1.05 13.56c-.67.76-1.62 1.15-2.75 1.15-1.82 0-3.67-1.26-3.67-3.67 0-.96.33-1.85.92-2.52.67-.76 1.62-1.15 2.75-1.15 1.83 0 3.67 1.26 3.67 3.67 0 .96-.33 1.85-.92 2.52M191.7 236.15h-8.86v-22.13h8.77v2.56c.59-1.34 3.18-3.19 5.74-3.19 5.25 0 8.26 3.63 8.26 9.97v12.79h-8.84v-12.06c0-1.86-.8-2.8-2.38-2.8s-2.68.7-2.68 4.18v10.68ZM245.11 254.62c0 2.41-.97 4.41-2.88 5.95-1.8 1.49-4.18 2.25-7.04 2.25-3.72 0-6.73-.78-9.43-2.55l-.51-.36 3.52-5.81c4.04 2.59 6.13 2.2 6.93 2.14 1.75-.13 1.94-2.07.49-2.04-1.11.03-3.31.25-6.56-1.26-2.28-1.39-3.76-3.02-3.76-5.69 0-2.31.96-4.21 2.86-5.63 1.82-1.37 3.56-2.12 6.16-2.24 3.37-.16 5.81.58 8.83 2.13l.64.42-3.21 5.29c-3.52-1.41-5.34-1.79-6.62-1.55-1.5.28-1.28 1.74-.18 1.88 1.1.15 2.86-.33 6.18.85 2.88 1.15 4.59 3.02 4.59 6.21ZM113.56 236.72c6.84 0 12.16-4.01 12.16-11.66 0-6.28-3.52-10.11-8.57-11.28-2.93-.58-4.91-.48-7.6.11-4.86 1.29-8.46 5.07-8.46 11.17 0 7.65 5.64 11.66 12.48 11.66Z" class="cls-3"></path><path d="M106.99 224.62c-1.16-.47-1.85-1.47-1.31-2.55.4-.81 1.59-1.13 2.5-.78 1.09.42 1.26 1.55 1.82 2.02.48.4 1.13.45 1.56.18.32-.2.42-.65.3-1.06-.16-.54-.58-.88-.99-1.22-.73-.59-1.76-1.1-1.14-2.72.51-1.33 2.01-1.37 2.01-1.37.59-.07 1.13.11 1.56.5.58.52.69 1.21.6 1.95-.09.67-.33 1.27-.45 1.93-.14.78.27 1.56 1.06 1.59 1.04.04 1.35-.76 1.48-1.26.19-.74.43-1.43 1.12-1.86.99-.62 2.35-.48 2.99.71.5.94.34 2.24-.43 2.95-.35.32-.76.43-1.21.43-.64 0-1.29-.01-1.89.29-.41.21-.58.54-.58.99 0 .44.23.72.6.91.69.35 1.46.42 2.21.55 1.09.19 2.04.57 2.66 1.58 0 0 .01.02.02.03.7 1.19-.03 2.92-1.42 2.99-3.08.16-3.72-3.37-4.93-3.34-.52.01-.92.55-.74 1.18.1.35.37.85.54 1.17.61 1.11-.29 2.36-1.34 2.47-1.74.18-2.47-.83-2.42-1.87.05-1.16 1.03-2.35.03-2.85-1.06-.53-1.92 1.54-2.93 2-.92.42-2.19.09-2.64-.92-.32-.71-.26-2.09 1.15-2.61.88-.33 2.85.43 2.95-.53.12-1.1-2.07-1.2-2.72-1.46Z" class="cls-9"></path><path d="M200.76 248.44c1.61 6.65-3.21 12.23-9.48 13.75-6.27 1.51-13.25-1.22-14.86-7.87-1.13-4.69.57-8.5 3.8-10.99.31-.25.69-.5.95-.59-1.61.14-2.59.06-3.57.39-.11.04-.21-.08-.15-.18 1.05-1.99 3.46-2.96 5.17-2.3a281 281 0 0 1-2.07-1.82l1.59-1.32s1.02 1.5 1.76 2.6c.97-2.18 3.39-2.79 4.67-1.59.08.07.03.2-.07.21-.85.13-1.16 1.01-1.09 1.59l.73-.09c6.01-.77 11.17 2.22 12.62 8.21M249.28 241.4c.43-.2.64-.53.64-1.01 0-.74-.58-1.1-1.32-1.1h-1.39v3.09h.84v-.85h.42l.59.85h.95l-.73-.99Zm-.82-.62h-.41v-.76h.41c.41 0 .62.12.62.37s-.21.39-.62.39" class="cls-3"></path><path d="M250.85 238.5c-.65-.67-1.45-1-2.39-1s-1.73.33-2.38 1c-.64.67-.96 1.47-.96 2.42s.32 1.74.96 2.4c.65.65 1.44.99 2.38.99s1.74-.33 2.39-.99c.65-.67.99-1.47.99-2.4s-.33-1.75-.99-2.42m-.65 4.19q-.705.72-1.74.72c-1.035 0-1.26-.23-1.73-.72-.47-.48-.7-1.07-.7-1.78s.23-1.31.7-1.79c.47-.49 1.05-.74 1.73-.74s1.27.25 1.74.74c.48.48.72 1.09.72 1.79s-.23 1.29-.72 1.78" class="cls-3"></path><path d="M259.53 246.05c-4.19 11.83-8.76 25.01-12.79 36.87L266 248.63s-3.14-1.4-6.47-2.58M33.68 246.05c-3.44 1.24-6.45 2.58-6.45 2.58l19.23 34.23c-4.02-11.84-8.59-25-12.78-36.81" class="cls-6"></path><path d="m107.52 56.25-2.44-4.87-11.15 5.58-2.24-4.47 10.59-5.3-2.35-4.68-10.58 5.3-2.02-4.03 11.15-5.58-2.44-4.88-17.17 8.59 11.49 22.94zM126.08 51.44l7.03-1.56-7.34-7.78.22-.17c2.7-2.13 3.63-4.87 2.84-8.39-.61-2.73-1.99-4.67-4.12-5.75-2.12-1.07-4.86-1.25-8.14-.52l-9.92 2.2 5.56 25.05 6.13-1.36-1.76-7.91 3.02-.67 6.46 6.86Zm-10.65-11.48-1.45-6.52 3.39-.75c3.2-.71 4.84-.05 5.33 2.14.25 1.12.03 2.06-.64 2.8-.65.71-1.74 1.24-3.24 1.58zM138.902 24.164l6.277-.18.734 25.64-6.277.18zM156.75 24.2l-3.68 25.4 6.21.9 1.38-9.54 10.68 1.55.75-5.18-10.68-1.55.77-5.27 11.53 1.67.78-5.41zM176.307 54.047l8.04-24.368 5.964 1.968-8.04 24.368zM200.93 35.69l-12.24 22.55 16.87 9.16 2.61-4.8-10.96-5.94 2.38-4.4 10.4 5.65 2.5-4.6-10.4-5.64 2.15-3.97 10.96 5.95 2.6-4.8zM235.49 76.25c3.04-3.34 4.28-7 3.49-10.32-.75-3.12-2.47-5.87-5.26-8.42l-6.79-6.19-17.28 18.96 6.79 6.19c3.09 2.82 11.15 8.44 19.05-.22m-10.05-1.51c-1.88-.02-3.88-.98-5.93-2.85l-1.54-1.41 9.93-10.89 1.51 1.38c4.15 3.79 4.63 7.5 1.41 11.03-1.5 1.64-3.1 2.56-4.78 2.72-.2.02-.4.03-.61.03ZM66.74 50.23l7.46 17.6-15.85-10.69-5.24 4.32 22.61 14.57 6.24-5.14-9.98-24.98z"></path></g></svg>
</span>
'''

###EXAMPLES
movie_data = {
    "search":[
        {"title":"Jaws","year":1975,"score":86,"score_average":86,"type":"movie","ids":{"imdbid":"tt0073195","tmdbid":578,"traktid":457,"malid":"null","tvdbid":"null"}},
        {"title":"Jaws 2","year":1978,"score":54,"score_average":54,"type":"movie","ids":{"imdbid":"tt0077766","tmdbid":579,"traktid":458,"malid":"null","tvdbid":"null"}}
        ],"total":65}

ratings_data = {"provider_id":"tmdb","provider_rating":"tomatoes","mediatype":"movie","ratings":[{"id":578,"rating":97}]}

def check_api_requests():
    # Send GET request
    response = requests.get(f'https://api.mdblist.com/user?apikey={api_key}')

    # Check if the request was successful
    if response.status_code == 200:
        # Parse the JSON response into a dictionary
        data = response.json()  # This converts the response to a dictionary

        # Convert values to integers before calculation
        api_requests = int(data["api_requests"])
        api_requests_count = int(data["api_requests_count"])

        # Calculate remaining API calls
        remaining_api_calls = api_requests - api_requests_count

        #remaining_api = int(response.text[1]) - int(response.text[0])
        st.write(f"{remaining_api_calls}/{api_requests} remaining")
        #st.write("API requests remaining: " {remaining_api})
    else:
        st.error(f"Error: {response.status_code}")

##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
mediatype = "Movies"
ico=":material/tv_gen:"
fu = 0
with st.sidebar:
    st.header("OPTIONS")
    mtype = st.segmented_control("Type", ["Movies", "Shows"], default="Movies", label_visibility="hidden")

    # Update mediatype and ico based on the selected value
    if mtype == "Movies":
        mediatype = "movie"
        #ico = ":material/tv_gen:"
    elif mtype == "Shows":
        mediatype = "show"
        #ico = ":material/tv:"

    sort = st.toggle("Sort by rating")
    wimages = st.toggle("Show images", True)
    table = st.toggle("Show table")

    st.divider()
    st.subheader("INFO")
    st.subheader("Score")
    st.write('''The score is calculated using all the ratings average and with a votes baseline. The baseline is different for every rating type, and if the vote count is lower than the baseline, the rating is decreased with the exception of current year movies and shows.''')

    st.subheader("Score Average")
    st.write('''If the score is modified by the lack of votes (votes baseline), the Score Average is displayed alongside the modified Score.''')

    st.divider()
    st.subheader("Rotten Tomatoes Critics Ratings")
    st.write("""
Tomato score:
When at least 60% of reviews for a movie or TV show are positive, it is considered Fresh and a red tomato is displayed.

Rotten score:
When less than 60% of reviews for a movie or TV show are positive, it is considered Rotten and a green splat is displayed.

No score yet:
If a title has not released yet or there are not enough reviews to generate a Tomatometer score, a gray faded tomato is displayed.

Certified Fresh:
Certified Fresh status is a special designation awarded to the best-reviewed movies and TV shows. To qualify, movies or TV shows must meet the following requirements:
- A Tomatometer score of 75% or higher""")
    
    st.divider()
    st.subheader("Rotten Tomatoes Audience Ratings")
    st.write("""
Popcorn score:      
When at least 60% of users give a movie or TV show a star rating of 3.5 or higher, a full popcorn bucket is displayed.

Rotten audience score:
When less than 60% of users give a movie or TV show a star rating of 3.5 or higher, a tipped over popcorn bucket is displayed.

No audience score yet:
If a title has not released yet or there are not enough reviews to generate an Audience Score, a gray faded popcorn bucket is displayed.

Verified Hot: The Verified Hot status and badge is an elevated designation honoring the highest verified reviewed theatrical films by fans. Verified Hot is composed of Verified Ratings and Reviews from the Popcornmeter score and will be applied to all eligible first run movies released on or after May 2019. To qualify, a movie must meet the following achievement qualifications:

- Have a Verified Audience Score of 90% or higher.""")
    
    st.divider()
    st.header("ABOUT")
    st.write("Images from TMDB")
    st.write("This product uses the TMDB API but is not endorsed or certified by TMDB.")

    if st.button("Check Ratings API requests", use_container_width=True):
        check_api_requests()

def show_image(tmdbid, mtype, amount): #type movie or tv
    headers = {
            "accept": "application/json",
            "Authorization": f"Bearer {tmdb_api_key}"
        }
    
    if amount == 1:
        url = f"https://api.themoviedb.org/3/{mtype}/{tmdbid}?language=en-US"

        response = requests.get(url, headers=headers)
        data_dict = response.json()

        size = "w400"
        prefix = f"https://image.tmdb.org/t/p/{size}"

        if data_dict["poster_path"]:
            file_path = data_dict["poster_path"]
            completeImgURL = f'{prefix}{file_path}'

            return completeImgURL
        else:
            st.warning("No poster image found.")

    else:
        url = f"https://api.themoviedb.org/3/{mtype}/{tmdbid}/images"

        response = requests.get(url, headers=headers)
        data_dict = response.json()

        size = "w400"
        prefix = f"https://image.tmdb.org/t/p/{size}"

        if data_dict["backdrops"]:
            file_path = data_dict["backdrops"][0]["file_path"]
            completeImgURL = f'{prefix}{file_path}'

            for backdrop in data_dict["backdrops"][:amount]:  # first 3 images
                file_path = backdrop["file_path"]
                completeImgURL = f'{prefix}{file_path}'

                return completeImgURL

        else:
            st.warning("No backdrop images found.")

# Function to search movies/shows
def search_movie(title, api_key):
    url = f"https://api.mdblist.com/search/{mediatype}?query={title}&sort_by_score={sort}&apikey={api_key}"

    try:
        response = requests.get(url)
        
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"Error: {response.status_code}")
            return None
    except Exception as e:
        st.error(f"An error occurred: {e}")
        return None

# Function to get movie ratings
def get_ratings(id, return_rating_type, api_key):
    #mediatype_rating = 'movie' #show
    #return_rating = 'tomatoes' #trakt , imdb , tmdb , letterboxd , tomatoes , audience , metacritic , rogerebert , mal , score , score_average
    if return_rating_type == "tomatoes" or return_rating_type == "audience":
        return_rating_type = "tmdb"
    
    url = f"https://api.mdblist.com/rating/{mediatype}/{return_rating_type}?apikey={api_key}"

    # Data to send in the request body
    body = {
        'ids': [id],
        'provider': return_rating_type
    }

    try:
        response = requests.post(url, json=body)
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"Error: {response.status_code}")
            return None
    except Exception as e:
        st.error(f"An error occurred: {e}")
        return None
    
# Function to apply color based on rating
def color_rating(rating):
    if rating is None:
        return "color: gray"  # Or any default color for missing ratings
    
    if isinstance(rating, str) and '%' in rating:
        try:
            # Extract the numeric part and convert to integer
            rating = int(rating.strip('%'))
        except ValueError:
            return "color: gray"  # Return gray if conversion fails
        
    #rating = int(rating.strip('%'))
    rating = int(rating)  # Ensure rating is an integer
    r = int(255 * (100 - rating) / 100)
    g = int(255 * rating / 100)
    b = 0
    return f"color: rgb({r}, {g}, {b})"

def display_results(mtype):
    rtype = "movie"
    if mtype == "Movies": rtype = "movie"
    else: rtype = "tv"

    if st.session_state['movie_data']:
        movie_data = st.session_state['movie_data']
        
        if movie_data.get("search"):         
            i = 0
            amount = st.empty()
            amount.markdown(i)

            for movie in movie_data['search']:
                if int(movie['score']) > 0:
                    amount.markdown(f"Found {i+1}/{movie_data['total']} results with available ratings (higher than 0%)")

                    button_label = f"{movie['title']}"
                    ratings_imdb = ''
                    ratings_tmdb = ''
                    ratings_tmdb2 = ''
                    imdbid = movie_data["search"][i]["ids"]["imdbid"]
                    tmdbid = movie_data["search"][i]["ids"]["tmdbid"]
                    with st.container():
                        if wimages:
                            colM1, colM2 = st.columns([0.4, 0.6])

                            with colM1:
                                st.image(show_image(movie_data["search"][i]["ids"]["tmdbid"], rtype, 1))
                            
                            with colM2:
                                if st.button(button_label, use_container_width=True, key=i):
                                    # Fetch ratings and handle errors gracefully
                                    if imdbid:
                                        with st.spinner("Fetching IMDb Ratings..."):
                                            st.toast("Fetching IMDb Ratings...")
                                            ratings_imdb = get_ratings(imdbid, "imdb", api_key)
                                    if tmdbid:
                                        with st.spinner("Fetching Rotten Tomatoes Critics Ratings..."):
                                            st.toast("Fetching Rotten Tomatoes Critics Ratings...")
                                            ratings_tmdb = get_ratings(tmdbid, "tomatoes", api_key)
                                        with st.spinner("Fetching Rotten Tomatoes Audience Ratings..."):
                                            st.toast("Fetching Rotten Tomatoes Audience Ratings...")
                                            ratings_tmdb2 = get_ratings(tmdbid, "audience", api_key)    
                                    else:
                                        st.error("No id found")

                            #with colM3:
                                ############################################################################
                                #TEST more info
                                headers = {
                                    "accept": "application/json",
                                    "Authorization": f"Bearer {tmdb_api_key}"
                                }
                            
                                url = f"https://api.themoviedb.org/3/{rtype}/{tmdbid}?language=en-US"

                                try:
                                    response = requests.get(url, headers=headers)
                                    if response.status_code == 200:
                                        data_dict = response.json()
                                    else:
                                        st.error(f"Error: {response.status_code}")
                                        data_dict = None
                                except Exception as e:
                                    st.error(f"An error occurred: {e}")
                                    return None
                                #response = requests.get(url, headers=headers)


                                #data_dict = response.json()

                                #st.write(data_dict)
                                if data_dict:
                                    genres = data_dict.get("genres", [])
                                    budget = data_dict.get("budget", 0)
                                    revenue = data_dict.get("revenue", 0)
                                    if int(budget) == 0: 
                                        budget = "N/A"
                                    if int(revenue) == 0:
                                        revenue = "N/A"
                                    if budget == "N/A" or revenue == "N/A":
                                        profit = "N/A"
                                    else:
                                        profit = revenue - budget

                                    overview = data_dict.get("overview", "No description available")
                                    tagline = data_dict.get("tagline", "")
                                    runtime = data_dict.get("runtime", "?")
                                    
                                    st.write(overview)
                                    st.write(tagline)
                                    
                                    if genres:
                                        genre_names = [genre.get("name") for genre in genres]
                                        #st.pills("Genres", genre_names, disabled=True, label_visibility="collapsed")
                                        st.pills("Genres", genre_names, label_visibility="collapsed", key=tmdbid*1000)

                                    moneyTableData = [
                                        {'Budget': budget, 'Revenue': revenue, 'Profit': profit}
                                    ]
                                    moneydf = pd.DataFrame(moneyTableData)
                                    
                                    # Format the 'Budget', 'Revenue', and 'Profit' columns as currency
                                    moneydf['Budget'] = moneydf['Budget'].apply(lambda x: f"${x:,.0f}" if isinstance(x, (int, float)) else x)
                                    moneydf['Revenue'] = moneydf['Revenue'].apply(lambda x: f"${x:,.0f}" if isinstance(x, (int, float)) else x)
                                    moneydf['Profit'] = moneydf['Profit'].apply(lambda x: f"${x:,.0f}" if isinstance(x, (int, float)) else x)

                                    tableData = [
                                        {'Year': movie['year'], 'Runtime': runtime, 'Rating': movie['score'], 'Rating average': movie['score_average']}
                                    ]
                                    #######################################TEST OVER
                                    #tableData = [
                                    #    {'Year': movie['year'], 'Rating': movie['score'], 'Rating average': movie['score_average']}
                                    #]
                                    df = pd.DataFrame(tableData)
                                    # Apply color only on Rating and Rating average columns
                                    styled_df = df.style.map(color_rating, subset=['Rating', 'Rating average'])
                                    # Format the 'Budget', 'Revenue', and 'Profit' columns as currency
                                    df['Year'] = df['Year'].apply(lambda x: f"{x}")
                                    df['Runtime'] = df['Runtime'].apply(lambda x: f"{x} min")
                                    df['Rating'] = df['Rating'].apply(lambda x: f"{x}%")
                                    df['Rating average'] = df['Rating average'].apply(lambda x: f"{x}%")
                                    # Display with colors in Streamlit
                                    st.dataframe(styled_df, use_container_width=True, hide_index=True)

                                    st.dataframe(moneydf, use_container_width=True, hide_index=True)

                        else:
                            colM1, colM2 = st.columns(2)

                            with colM1:
                                if st.button(button_label, use_container_width=True, key=i):
                                    # Fetch ratings and handle errors gracefully
                                    if imdbid:
                                        with st.spinner("Fetching IMDb Ratings..."):
                                            st.toast("Fetching IMDb Ratings...")
                                            ratings_imdb = get_ratings(imdbid, "imdb", api_key)
                                    if tmdbid:
                                        with st.spinner("Fetching Rotten Tomatoes Critics Ratings..."):
                                            st.toast("Fetching Rotten Tomatoes Critics Ratings...")
                                            ratings_tmdb = get_ratings(tmdbid, "tomatoes", api_key)
                                        with st.spinner("Fetching Rotten Tomatoes Audience Ratings..."):
                                            st.toast("Fetching Rotten Tomatoes Audience Ratings...")
                                            ratings_tmdb2 = get_ratings(tmdbid, "audience", api_key) 
                                    else:
                                        st.error("No id found")

                            with colM2:
                                tableData = [
                                    {'Year': movie['year'], 'Rating': movie['score'], 'Rating average': movie['score_average']}
                                ]
                                df = pd.DataFrame(tableData)
                                # Apply color only on Rating and Rating average columns
                                styled_df = df.style.map(color_rating, subset=['Rating', 'Rating average'])
                                # Display with colors in Streamlit
                                st.dataframe(styled_df, use_container_width=True, hide_index=True)

                        #WATCH
                        if watchButtonAllowed:
                            watchbutton=False
                            if rtype == "movie":
                                if st.button("Watch", key=tmdbid*10000, use_container_width=True):
                                    st.toast("Fetching link")

                                    # HTML code for the iframe
                                    iframe_html = f"""
                                    <iframe
                                        src="https://vidsrc.me/embed/{rtype}?tmdb={tmdbid}"
                                        style="width: 100%; height: 100%;"
                                        frameborder="0"
                                        referrerpolicy="origin"
                                        allowfullscreen>
                                    </iframe>"""

                                    # Display the iframe
                                    st.markdown(iframe_html, unsafe_allow_html=True)
                            else:
                                #tvcol1, tvcol2, tvcol3 = st.columns(3)
                                tvcol1, tvcol2 = st.columns(2)
                                with tvcol1:
                                    season = st.number_input("Season", key=tmdbid*10, min_value=1, value=1, step=1)
                                with tvcol2:
                                    episode = st.number_input("Episode", key=tmdbid*100, min_value=1, value=1, step=1)
                                
                                #with tvcol3:
                                watchbutton = st.button("Watch", key=tmdbid*10000, use_container_width=True)

                                if watchbutton:
                                    st.toast("Fetching link")

                                    # HTML code for the iframe
                                    iframe_html = f"""
                                    <iframe
                                        src="https://vidsrc.me/embed/{rtype}?tmdb={tmdbid}&season={season}&episode={episode}"
                                        style="width: 100%; height: 100%;"
                                        frameborder="0"
                                        referrerpolicy="origin"
                                        allowfullscreen>
                                    </iframe>"""

                                    # Display the iframe
                                    st.markdown(iframe_html, unsafe_allow_html=True)

                        ##DISPLAY IMDB ratings
                        if ratings_imdb and ratings_imdb["ratings"]:
                            colR1, colR2, colR3 = st.columns([0.5, 0.25, 0.25])

                            with colR1:
                                imdb_rating = ratings_imdb["ratings"][0]["rating"]
                                imdb_rating = int(imdb_rating * 10)
                                st.markdown(
                                    f'<p style="font-size:24px; {color_rating(imdb_rating)}">'
                                    f'IMDB Ratings: {imdb_rating}%</p>', 
                                    unsafe_allow_html=True
                                )

                            with colR2:
                                st.markdown(imdb_star, unsafe_allow_html=True)

                            with colR3:
                                url = f"https://www.imdb.com/title/{imdbid}"
                                st.markdown(f'<a href="{url}" target="_blank"><button style="padding:10px 20px;">Open in new tab</button></a>', unsafe_allow_html=True)

                        elif ratings_imdb == '':
                            st.empty()

                        else:
                            st.write("IMDB Ratings: N/A")
                            st.markdown(imdb_nostar, unsafe_allow_html=True)

                        ##DISPLAY TOMATOES ratings
                        if ratings_tmdb and ratings_tmdb["ratings"]:
                            colR1, colR2, colR3 = st.columns([0.5, 0.25, 0.25])

                            with colR1:
                                tomatoes_rating = ratings_tmdb["ratings"][0]["rating"]
                                st.markdown(
                                    f'<p style="font-size:24px; {color_rating(tomatoes_rating)}">'
                                    f'🍅 Critics: {tomatoes_rating}%</p>', 
                                    unsafe_allow_html=True
                                )

                            with colR2:
                                if tomatoes_rating >= 75:
                                    st.markdown(fresh_tomato, unsafe_allow_html=True)
                                elif tomatoes_rating >= 60:
                                    st.markdown(full_tomato, unsafe_allow_html=True)
                                else:
                                    st.markdown(splat_tomato, unsafe_allow_html=True)

                            with colR3:
                                url = f"https://www.rottentomatoes.com/search?search={movie['title']}"
                                st.markdown(f'<a href="{url}" target="_blank"><button style="padding:10px 20px;">Open in new tab</button></a>', unsafe_allow_html=True)

                        elif ratings_tmdb == '':
                            st.empty()

                        else:
                            st.write("🍅 Critics: N/A")
                            st.markdown(faded_tomato, unsafe_allow_html=True)

                        if ratings_tmdb2 and ratings_tmdb2["ratings"]:
                            colR1, colR2, colR3 = st.columns([0.5, 0.25, 0.25])

                            with colR1:
                                audience_rating = ratings_tmdb2["ratings"][0]["rating"]
                                st.markdown(
                                    f'<p style="font-size:24px; {color_rating(audience_rating)}">'
                                    f'🍅 Audience: {audience_rating}%</p>', 
                                    unsafe_allow_html=True
                                )
                        
                            with colR2:
                                if tomatoes_rating >= 90:
                                    st.markdown(hot_bucket, unsafe_allow_html=True)
                                elif tomatoes_rating >= 60:
                                    st.markdown(full_bucket, unsafe_allow_html=True)
                                else:
                                    st.markdown(tipped_bucket, unsafe_allow_html=True)

                        elif ratings_tmdb2 == '':
                            st.empty()

                        else:
                            st.write("🍅 Audience: N/A")
                            st.markdown(empty_bucket, unsafe_allow_html=True)

                        st.divider()

                i = i+1
        else:
            st.warning("No results found.")
    else:
        st.warning(f"Please search for {mtype}")

def display_results_in_table(mtype):
    rtype = "movie"
    if mtype == "Movies": rtype = "movie"
    else: rtype = "tv"

    #PLACEHOLDER STRUCTURE
    rate_container = st.expander("Ratings", expanded=st.session_state.expander_open)  # Create a placeholder for ratings above the DataFrame
    with rate_container:
        rate_title = st.empty()
        colR1, colR2, colR3 = st.columns([0.15, 0.05, 0.15])
        with colR1:
            rate_imdb = st.empty()
        with colR2:
            rate_imdb_icon = st.empty()
        with colR3:
            rate_imdb_link = st.empty()

        colR1, colR2, colR3 = st.columns([0.15, 0.05, 0.15])
        with colR1:
            rate_tomato1 = st.empty()
        with colR2:
            rate_tomato1_icon = st.empty()
        with colR3:
            rate_tomato1_link = st.empty()

        colR1, colR2, colR3 = st.columns([0.15, 0.05, 0.15])
        with colR1:
            rate_tomato2 = st.empty()
        with colR2:
            rate_tomato2_icon = st.empty()

    if 'movie_data' in st.session_state:
        movie_data = st.session_state.get('movie_data', {})

        if movie_data:   
            search_results = movie_data.get("search", [])

            # Filter out movies with a valid score
            filtered_movies = [m for m in search_results if int(m.get("score", 0)) > 0]

            if filtered_movies:
                st.markdown(f"Found {len(filtered_movies)}/{movie_data['total']} results with available ratings (higher than 0%)")

                if wimages:
                    # Create a DataFrame for the search results
                    df_display = pd.DataFrame([{
                        "Select": False,
                        "Image": show_image(m["ids"]["tmdbid"], rtype, 1),
                        "Title": f"{m['title']}",
                        "Year": m['year'],
                        "Score": int(m['score']),
                        "Average": int(m['score_average'])
                    } for m in filtered_movies])

                    # Configure the 'Image' column to display images
                    column_config = {
                        "Image": st.column_config.ImageColumn("Poster", width="small", help="Movie poster")
                    }

                    # Apply color only on Rating and Rating average columns
                    styled_df = df_display.style.map(color_rating, subset=['Score', 'Average'])

                    edited_df = st.data_editor(
                        styled_df,
                        column_config=column_config,
                        use_container_width=True,
                        hide_index=True,
                        disabled=("Image", "Title", "Year", "Score", "Average"),
                        key="movie_editor"
                    )
                else:
                    # Create a DataFrame for the search results
                    df_display = pd.DataFrame([{
                        "Select": False,
                        "Title": f"{m['title']}",
                        "Year": m['year'],
                        "Score": int(m['score']),
                        "Average": int(m['score_average'])
                    } for m in filtered_movies])

                    # Apply color only on Rating and Rating average columns
                    styled_df = df_display.style.map(color_rating, subset=['Score', 'Average'])

                    edited_df = st.data_editor(
                        styled_df,
                        use_container_width=True,
                        hide_index=True,
                        disabled=("Title", "Year", "Score", "Average"),
                        key="movie_editor"
                    )

                # Identify selected row
                selected_rows = edited_df[edited_df["Select"] == True]

                if not selected_rows.empty:
                    selected_index = selected_rows.index[0]
                    selected_movie = df_display.loc[selected_rows.index[0]]

                    imdbid = movie_data["search"][selected_index]["ids"]["imdbid"]
                    tmdbid = movie_data["search"][selected_index]["ids"]["tmdbid"]
                    movie_title = selected_movie['Title']
                    ratings_imdb = ''
                    ratings_tmdb = ''
                    ratings_tmdb2 = ''

                    # First display ratings above the table
                    rate_title.subheader(f"Ratings for: {movie_title}")

                    # Fetch ratings and handle errors gracefully
                    if imdbid:
                        with st.spinner("Fetching IMDb Ratings..."):
                            st.toast("Fetching IMDb Ratings...")
                            ratings_imdb = get_ratings(imdbid, "imdb", api_key)
                    if tmdbid:
                        with st.spinner("Fetching Rotten Tomatoes Critics Ratings..."):
                            st.toast("Fetching Rotten Tomatoes Critics Ratings...")
                            ratings_tmdb = get_ratings(tmdbid, "tomatoes", api_key)
                        with st.spinner("Fetching Rotten Tomatoes Audience Ratings..."):
                            st.toast("Fetching Rotten Tomatoes Audience Ratings...")
                            ratings_tmdb2 = get_ratings(tmdbid, "audience", api_key)
                        
                    ##DISPLAY IMDB
                    if ratings_imdb and ratings_imdb["ratings"]:
                        colR1, colR2, colR3 = st.columns([0.33, 0.33, 0.33])

                        with colR1:
                            imdb_rating = ratings_imdb["ratings"][0]["rating"]
                            imdb_rating = int(imdb_rating * 10)
                            rate_imdb.markdown(
                                f'<p class="hello" style="font-size:24px; {color_rating(imdb_rating)}">'
                                f'IMDB: {imdb_rating}%</p>', 
                                unsafe_allow_html=True
                            )

                        with colR2:
                            rate_imdb_icon.markdown(imdb_star, unsafe_allow_html=True)

                        with colR3:
                            url = f"https://www.imdb.com/title/{imdbid}"
                            rate_imdb_link.markdown(f'<a href="{url}" target="_blank"><button style="padding:10px 20px;">Open in new tab</button></a>', unsafe_allow_html=True)

                    #elif ratings_imdb == '':
                    #    st.empty()

                    else:
                        rate_imdb.write("IMDB: N/A")
                        rate_imdb_icon.markdown(imdb_nostar, unsafe_allow_html=True)

                    ##DISPLAY TOMATOES
                    if ratings_tmdb and ratings_tmdb["ratings"]:
                        colR1, colR2, colR3 = st.columns([0.33, 0.33, 0.33])

                        with colR1:
                            tomatoes_rating = ratings_tmdb["ratings"][0]["rating"]
                            rate_tomato1.markdown(
                                f'<p style="font-size:24px; {color_rating(tomatoes_rating)}">'
                                f'🍅 Critics: {tomatoes_rating}%</p>', 
                                unsafe_allow_html=True
                            )

                        with colR2:
                            if tomatoes_rating >= 75:
                                rate_tomato1_icon.markdown(fresh_tomato, unsafe_allow_html=True)
                            elif tomatoes_rating >= 60:
                                rate_tomato1_icon.markdown(full_tomato, unsafe_allow_html=True)
                            else:
                                rate_tomato1_icon.markdown(splat_tomato, unsafe_allow_html=True)

                        with colR3:
                            url = f"https://www.rottentomatoes.com/search?search={movie_title}"
                            rate_tomato1_link.markdown(f'<a href="{url}" target="_blank"><button style="padding:10px 20px;">Open in new tab</button></a>', unsafe_allow_html=True)

                        #elif ratings_tmdb == '':
                        #    st.empty()

                    else:
                        rate_tomato1.write("🍅 Critics: N/A")
                        rate_tomato1_icon.markdown(faded_tomato, unsafe_allow_html=True)

                    if ratings_tmdb2 and ratings_tmdb2["ratings"]:
                        colR1, colR2, colR3 = st.columns([0.33, 0.33, 0.33])

                        with colR1:
                            audience_rating = ratings_tmdb2["ratings"][0]["rating"]
                            rate_tomato2.markdown(
                                f'<p style="font-size:24px; {color_rating(audience_rating)}">'
                                f'🍅 Audience: {audience_rating}%</p>', 
                                unsafe_allow_html=True
                            )
                    
                        with colR2:
                            if audience_rating >= 90:
                                rate_tomato2_icon.markdown(hot_bucket, unsafe_allow_html=True)
                            elif audience_rating >= 60:
                                rate_tomato2_icon.markdown(full_bucket, unsafe_allow_html=True)
                            else:
                                rate_tomato2_icon.markdown(tipped_bucket, unsafe_allow_html=True)

                    #elif ratings_tmdb2 == '':
                    #    st.empty()

                    else:
                        rate_tomato2.write("🍅 Audience: N/A")
                        rate_tomato2_icon.markdown(empty_bucket, unsafe_allow_html=True)

                    #rate.divider()  # Divider between ratings and table

                else:
                    rate_title.info("Select a movie from the table above to view ratings.")
            else:
                st.warning("No results found with ratings > 0.")
        else:
            rate_title.warning("Please perform a movie search first.")
    else:
        st.warning("Movie data is not available in session.")

def moveFocus():
    st.components.v1.html(
        f"""
            <script>
                var input = window.parent.document.querySelectorAll("input[type=text]");
                for (var i = 0; i < input.length; ++i) {{
                    input[i].focus();
                }}
            </script>
        """,
        height = 0,
    )

# Streamlit app
def app():
    # Load movie data from session state if it exists

    # Initialize session state for the input value if not already set
    if 'movie_title' not in st.session_state:
        st.session_state.movie_title = "Jaws"

    if 'movie_data' not in st.session_state:
        st.session_state['movie_data'] = None
    

    st.title(f"Ratings App")

    #col1, col2, col3 = st.columns([0.7, 0.1, 0.2])
    #col1, col2 = st.columns([3,1])
    #with col1:
        #movie_title = st.empty()
    st.session_state.movie_title = st.text_input("Enter title", value=st.session_state.movie_title, icon=ico, label_visibility="collapsed", key="unique_input_key")

        #movie_title = st.text_input("Enter title", "Jaws", icon=ico, label_visibility="collapsed", key="unique_input_key")

    #DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(3, 0), _props={'delta_type': 'text_input', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(3, 0), _index=2), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(3,), _index=2), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')), _form_data=FormData(form_id=''))

    #with col2:
    def callback():    
        if st.session_state.my_stt_output:
            st.session_state.movie_title = st.session_state.my_stt_output

            #movie_title.text_input("Enter title", st.session_state.my_stt_output, icon=ico, label_visibility="collapsed")
            moveFocus()
            st.rerun()

    speech_to_text(
    language='en',
    start_prompt="🎙️",
    stop_prompt="⏺️",
    just_once=True,
    use_container_width=True,
    args=(),
    kwargs={},
    key='my_stt', 
    callback=callback)
    
    # Search button
    #with col3:
    #with col2:
    if st.button(f"Search {mtype}", use_container_width=True):
        if st.session_state.movie_title and api_key:
            with st.spinner("Searching..."):
                st.toast(f"Searching for {st.session_state.movie_title}")
                movie_data = search_movie(st.session_state.movie_title, api_key)

                if movie_data:
                    st.session_state['movie_data'] = movie_data
                else:
                    st.session_state['movie_data'] = None

    # Display search results (if available)
    if table:
        display_results_in_table(mtype)
    else:
        display_results(mtype)

if __name__ == "__main__":
    app()
    st.caption(f':blue-background[©] :rainbow[Tassio Steinmann] {datetime.date.today().year}')
